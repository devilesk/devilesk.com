#!/usr/bin/env python

import os
import sys
sys.path.append('/home/sites/devilesk.com/minify')
import shutil
import yaml
from subprocess import call
from minify2 import compress, purge_cache

def main():
    DEPLOY_ROOT = '/srv/www/dev.devilesk.com'
    SITE_ROOT_DEV = 'http://dev.devilesk.com'
    SITE_ROOT_PROD = 'http://devilesk.com'
    SITE_ROOT = SITE_ROOT_DEV
    if len(sys.argv) > 1 and 'production' in sys.argv:
        DEPLOY_ROOT = '/srv/www/devilesk.com'
        SITE_ROOT = SITE_ROOT_PROD
        print 'MODE: PRODUCTION'
    else:
        print 'MODE: DEVELOPMENT'
        
    if len(sys.argv) > 1 and 'deploy' in sys.argv:
        call(["python", "generate_hero_data.py"], cwd='/home/sites/devilesk.com/scripts')
        print 'regenerated hero data'
        call(["python", "generate_hero_lore.py"], cwd='/home/sites/devilesk.com/scripts')
        print 'regenerated hero lore'
        call(["python", "generate_item_tooltips.py"], cwd='/home/sites/devilesk.com/scripts')
        print 'regenerated item tooltips'
        
        hyde_args = ["hyde"]
        if len(sys.argv) > 1 and 'verbose' in sys.argv:
            hyde_args.append("-v")
        
        hyde_args.append("gen")
        
        if len(sys.argv) > 1 and 'regen' in sys.argv:
            hyde_args.append("-r")

        if len(sys.argv) > 1 and 'production' in sys.argv:
            hyde_args.append("-c")
            hyde_args.append("/home/sites/devilesk.com/site-prod.yaml")
            print 'using site-prod.yaml'

        print 'calling hyde gen with args', hyde_args

        call(hyde_args, cwd='/home/sites/devilesk.com')

        print 'site deployed'

        #shutil.copy2('/home/sites/devilesk.com/site-backup.yaml', '/home/sites/devilesk.com/site.yaml')

        print 'site.yaml reverted'

    if len(sys.argv) > 1 and 'minifycss' in sys.argv:
        print 'Minifying css...'
        for fn in os.listdir(os.path.join(DEPLOY_ROOT, 'media/css')):
            if os.path.isfile(os.path.join(DEPLOY_ROOT, 'media/css', fn)):
                compress([os.path.join(DEPLOY_ROOT, 'media/css', fn)], os.path.join(DEPLOY_ROOT, 'media/css', fn), 'css')
                
    if len(sys.argv) > 1 and 'purgecss' in sys.argv:
        print 'Purging cloudflare cache of css...'
        css_files = []
        for fn in os.listdir(os.path.join(DEPLOY_ROOT, 'media/css')):
            if os.path.isfile(os.path.join(DEPLOY_ROOT, 'media/css', fn)):
                css_files.append(SITE_ROOT_PROD.strip('/') + '/media/css/' + fn.strip('/'))
        purge_cache(css_files)
        
    if len(sys.argv) > 1 and 'purgesprites' in sys.argv:
        print 'Purging cloudflare cache of spritesheets...'
        CACHE_FILES = [
            'http://devilesk.com/media/images/itemspritesheet.jpg',
            'http://devilesk.com/media/images/miniherospritesheet.png',
            'http://devilesk.com/media/images/herospritesheet.jpg',
            'http://devilesk.com/media/images/portraitspritesheet.png',
            'http://devilesk.com/media/images/miniherospritesheet.png',
            'http://devilesk.com/media/css/heroes.css'
            ]
        purge_cache(CACHE_FILES)
        
if __name__ == '__main__':
    main()
