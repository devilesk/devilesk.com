(function(b,f){var a=0,e=/^ui-id-\d+$/;b.ui=b.ui||{};b.extend(b.ui,{version:"1.10.3",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}});b.fn.extend({focus:function(g){return function(k,l){return typeof k==="number"?this.each(function(){var m=this;setTimeout(function(){b(m).focus();if(l){l.call(m)}},k)}):g.apply(this,arguments)}}(b.fn.focus),scrollParent:function(){var g;if(b.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))){g=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(b.css(this,"position"))&&/(auto|scroll)/.test(b.css(this,"overflow")+b.css(this,"overflow-y")+b.css(this,"overflow-x"))}).eq(0)}else{g=this.parents().filter(function(){return/(auto|scroll)/.test(b.css(this,"overflow")+b.css(this,"overflow-y")+b.css(this,"overflow-x"))}).eq(0)}return/fixed/.test(this.css("position"))||!g.length?b(document):g},zIndex:function(m){if(m!==f){return this.css("zIndex",m)}if(this.length){var k=b(this[0]),g,l;while(k.length&&k[0]!==document){g=k.css("position");if(g==="absolute"||g==="relative"||g==="fixed"){l=parseInt(k.css("zIndex"),10);if(!isNaN(l)&&l!==0){return l}}k=k.parent()}}return 0},uniqueId:function(){return this.each(function(){if(!this.id){this.id="ui-id-"+ ++a}})},removeUniqueId:function(){return this.each(function(){if(e.test(this.id)){b(this).removeAttr("id")}})}});function d(l,g){var n,m,k,o=l.nodeName.toLowerCase();if("area"===o){n=l.parentNode;m=n.name;if(!l.href||!m||n.nodeName.toLowerCase()!=="map"){return false}k=b("img[usemap=#"+m+"]")[0];return !!k&&c(k)}return(/input|select|textarea|button|object/.test(o)?!l.disabled:"a"===o?l.href||g:g)&&c(l)}function c(g){return b.expr.filters.visible(g)&&!b(g).parents().addBack().filter(function(){return b.css(this,"visibility")==="hidden"}).length}b.extend(b.expr[":"],{data:b.expr.createPseudo?b.expr.createPseudo(function(g){return function(k){return !!b.data(k,g)}}):function(l,k,g){return !!b.data(l,g[3])},focusable:function(g){return d(g,!isNaN(b.attr(g,"tabindex")))},tabbable:function(l){var g=b.attr(l,"tabindex"),k=isNaN(g);return(k||g>=0)&&d(l,!k)}});if(!b("<a>").outerWidth(1).jquery){b.each(["Width","Height"],function(l,g){var k=g==="Width"?["Left","Right"]:["Top","Bottom"],m=g.toLowerCase(),o={innerWidth:b.fn.innerWidth,innerHeight:b.fn.innerHeight,outerWidth:b.fn.outerWidth,outerHeight:b.fn.outerHeight};function n(r,q,p,s){b.each(k,function(){q-=parseFloat(b.css(r,"padding"+this))||0;if(p){q-=parseFloat(b.css(r,"border"+this+"Width"))||0}if(s){q-=parseFloat(b.css(r,"margin"+this))||0}});return q}b.fn["inner"+g]=function(p){if(p===f){return o["inner"+g].call(this)}return this.each(function(){b(this).css(m,n(this,p)+"px")})};b.fn["outer"+g]=function(p,q){if(typeof p!=="number"){return o["outer"+g].call(this,p)}return this.each(function(){b(this).css(m,n(this,p,true,q)+"px")})}})}if(!b.fn.addBack){b.fn.addBack=function(g){return this.add(g==null?this.prevObject:this.prevObject.filter(g))}}if(b("<a>").data("a-b","a").removeData("a-b").data("a-b")){b.fn.removeData=function(g){return function(k){if(arguments.length){return g.call(this,b.camelCase(k))}else{return g.call(this)}}}(b.fn.removeData)}b.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());b.support.selectstart="onselectstart" in document.createElement("div");b.fn.extend({disableSelection:function(){return this.bind((b.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(g){g.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}});b.extend(b.ui,{plugin:{add:function(k,l,n){var g,m=b.ui[k].prototype;for(g in n){m.plugins[g]=m.plugins[g]||[];m.plugins[g].push([l,n[g]])}},call:function(g,l,k){var m,n=g.plugins[l];if(!n||!g.element[0].parentNode||g.element[0].parentNode.nodeType===11){return}for(m=0;m<n.length;m++){if(g.options[n[m][0]]){n[m][1].apply(g.element,k)}}}},hasScroll:function(m,k){if(b(m).css("overflow")==="hidden"){return false}var g=k&&k==="left"?"scrollLeft":"scrollTop",l=false;if(m[g]>0){return true}m[g]=1;l=m[g]>0;m[g]=0;return l}})})(jQuery);(function(b,e){var a=0,d=Array.prototype.slice,c=b.cleanData;b.cleanData=function(f){for(var g=0,k;(k=f[g])!=null;g++){try{b(k).triggerHandler("remove")}catch(l){}}c(f)};b.widget=function(f,g,q){var n,o,l,p,k={},m=f.split(".")[0];f=f.split(".")[1];n=m+"-"+f;if(!q){q=g;g=b.Widget}b.expr[":"][n.toLowerCase()]=function(r){return !!b.data(r,n)};b[m]=b[m]||{};o=b[m][f];l=b[m][f]=function(r,s){if(!this._createWidget){return new l(r,s)}if(arguments.length){this._createWidget(r,s)}};b.extend(l,o,{version:q.version,_proto:b.extend({},q),_childConstructors:[]});p=new g;p.options=b.widget.extend({},p.options);b.each(q,function(s,r){if(!b.isFunction(r)){k[s]=r;return}k[s]=function(){var t=function(){return g.prototype[s].apply(this,arguments)},u=function(v){return g.prototype[s].apply(this,v)};return function(){var x=this._super,v=this._superApply,w;this._super=t;this._superApply=u;w=r.apply(this,arguments);this._super=x;this._superApply=v;return w}}()});l.prototype=b.widget.extend(p,{widgetEventPrefix:o?p.widgetEventPrefix:f},k,{constructor:l,namespace:m,widgetName:f,widgetFullName:n});if(o){b.each(o._childConstructors,function(s,t){var r=t.prototype;b.widget(r.namespace+"."+r.widgetName,l,t._proto)});delete o._childConstructors}else{g._childConstructors.push(l)}b.widget.bridge(f,l)};b.widget.extend=function(n){var g=d.call(arguments,1),m=0,f=g.length,k,l;for(;m<f;m++){for(k in g[m]){l=g[m][k];if(g[m].hasOwnProperty(k)&&l!==e){if(b.isPlainObject(l)){n[k]=b.isPlainObject(n[k])?b.widget.extend({},n[k],l):b.widget.extend({},l)}else{n[k]=l}}}}return n};b.widget.bridge=function(g,f){var k=f.prototype.widgetFullName||g;b.fn[g]=function(n){var l=typeof n==="string",m=d.call(arguments,1),o=this;n=!l&&m.length?b.widget.extend.apply(null,[n].concat(m)):n;if(l){this.each(function(){var q,p=b.data(this,k);if(!p){return b.error("cannot call methods on "+g+" prior to initialization; attempted to call method '"+n+"'")}if(!b.isFunction(p[n])||n.charAt(0)==="_"){return b.error("no such method '"+n+"' for "+g+" widget instance")}q=p[n].apply(p,m);if(q!==p&&q!==e){o=q&&q.jquery?o.pushStack(q.get()):q;return false}})}else{this.each(function(){var p=b.data(this,k);if(p){p.option(n||{})._init()}else{b.data(this,k,new f(n,this))}})}return o}};b.Widget=function(){};b.Widget._childConstructors=[];b.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:false,create:null},_createWidget:function(f,g){g=b(g||this.defaultElement||this)[0];this.element=b(g);this.uuid=a++;this.eventNamespace="."+this.widgetName+this.uuid;this.options=b.widget.extend({},this.options,this._getCreateOptions(),f);this.bindings=b();this.hoverable=b();this.focusable=b();if(g!==this){b.data(g,this.widgetFullName,this);this._on(true,this.element,{remove:function(k){if(k.target===g){this.destroy()}}});this.document=b(g.style?g.ownerDocument:g.document||g);this.window=b(this.document[0].defaultView||this.document[0].parentWindow)}this._create();this._trigger("create",null,this._getCreateEventData());this._init()},_getCreateOptions:b.noop,_getCreateEventData:b.noop,_create:b.noop,_init:b.noop,destroy:function(){this._destroy();this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(b.camelCase(this.widgetFullName));this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled ui-state-disabled");this.bindings.unbind(this.eventNamespace);this.hoverable.removeClass("ui-state-hover");this.focusable.removeClass("ui-state-focus")},_destroy:b.noop,widget:function(){return this.element},option:function(l,m){var f=l,n,k,g;if(arguments.length===0){return b.widget.extend({},this.options)}if(typeof l==="string"){f={};n=l.split(".");l=n.shift();if(n.length){k=f[l]=b.widget.extend({},this.options[l]);for(g=0;g<n.length-1;g++){k[n[g]]=k[n[g]]||{};k=k[n[g]]}l=n.pop();if(m===e){return k[l]===e?null:k[l]}k[l]=m}else{if(m===e){return this.options[l]===e?null:this.options[l]}f[l]=m}}this._setOptions(f);return this},_setOptions:function(f){var g;for(g in f){this._setOption(g,f[g])}return this},_setOption:function(f,g){this.options[f]=g;if(f==="disabled"){this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!g).attr("aria-disabled",g);this.hoverable.removeClass("ui-state-hover");this.focusable.removeClass("ui-state-focus")}return this},enable:function(){return this._setOption("disabled",false)},disable:function(){return this._setOption("disabled",true)},_on:function(l,k,g){var m,f=this;if(typeof l!=="boolean"){g=k;k=l;l=false}if(!g){g=k;k=this.element;m=this.widget()}else{k=m=b(k);this.bindings=this.bindings.add(k)}b.each(g,function(s,r){function p(){if(!l&&(f.options.disabled===true||b(this).hasClass("ui-state-disabled"))){return}return(typeof r==="string"?f[r]:r).apply(f,arguments)}if(typeof r!=="string"){p.guid=r.guid=r.guid||p.guid||b.guid++}var q=s.match(/^(\w+)\s*(.*)$/),o=q[1]+f.eventNamespace,n=q[2];if(n){m.delegate(n,o,p)}else{k.bind(o,p)}})},_off:function(g,f){f=(f||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace;g.unbind(f).undelegate(f)},_delay:function(l,k){function g(){return(typeof l==="string"?f[l]:l).apply(f,arguments)}var f=this;return setTimeout(g,k||0)},_hoverable:function(f){this.hoverable=this.hoverable.add(f);this._on(f,{mouseenter:function(g){b(g.currentTarget).addClass("ui-state-hover")},mouseleave:function(g){b(g.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(f){this.focusable=this.focusable.add(f);this._on(f,{focusin:function(g){b(g.currentTarget).addClass("ui-state-focus")},focusout:function(g){b(g.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(f,g,k){var n,m,l=this.options[f];k=k||{};g=b.Event(g);g.type=(f===this.widgetEventPrefix?f:this.widgetEventPrefix+f).toLowerCase();g.target=this.element[0];m=g.originalEvent;if(m){for(n in m){if(!(n in g)){g[n]=m[n]}}}this.element.trigger(g,k);return !(b.isFunction(l)&&l.apply(this.element[0],[g].concat(k))===false||g.isDefaultPrevented())}};b.each({show:"fadeIn",hide:"fadeOut"},function(g,f){b.Widget.prototype["_"+g]=function(m,l,o){if(typeof l==="string"){l={effect:l}}var n,k=!l?g:l===true||typeof l==="number"?f:l.effect||f;l=l||{};if(typeof l==="number"){l={duration:l}}n=!b.isEmptyObject(l);l.complete=o;if(l.delay){m.delay(l.delay)}if(n&&b.effects&&b.effects.effect[k]){m[g](l)}else{if(k!==g&&m[k]){m[k](l.duration,l.easing,o)}else{m.queue(function(p){b(this)[g]();if(o){o.call(m[0])}p()})}}}})})(jQuery);(function(e,c){e.ui=e.ui||{};var m,n=Math.max,r=Math.abs,p=Math.round,d=/left|center|right/,k=/top|center|bottom/,a=/[\+\-]\d+(\.[\d]+)?%?/,o=/^\w+/,b=/%$/,g=e.fn.position;function q(u,t,s){return[parseFloat(u[0])*(b.test(u[0])?t/100:1),parseFloat(u[1])*(b.test(u[1])?s/100:1)]}function l(s,t){return parseInt(e.css(s,t),10)||0}function f(t){var s=t[0];if(s.nodeType===9){return{width:t.width(),height:t.height(),offset:{top:0,left:0}}}if(e.isWindow(s)){return{width:t.width(),height:t.height(),offset:{top:t.scrollTop(),left:t.scrollLeft()}}}if(s.preventDefault){return{width:0,height:0,offset:{top:s.pageY,left:s.pageX}}}return{width:t.outerWidth(),height:t.outerHeight(),offset:t.offset()}}e.position={scrollbarWidth:function(){if(m!==c){return m}var t,s,v=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),u=v.children()[0];e("body").append(v);t=u.offsetWidth;v.css("overflow","scroll");s=u.offsetWidth;if(t===s){s=v[0].clientWidth}v.remove();return m=t-s},getScrollInfo:function(w){var v=w.isWindow?"":w.element.css("overflow-x"),u=w.isWindow?"":w.element.css("overflow-y"),t=v==="scroll"||v==="auto"&&w.width<w.element[0].scrollWidth,s=u==="scroll"||u==="auto"&&w.height<w.element[0].scrollHeight;return{width:s?e.position.scrollbarWidth():0,height:t?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var u=e(t||window),s=e.isWindow(u[0]);return{element:u,isWindow:s,offset:u.offset()||{left:0,top:0},scrollLeft:u.scrollLeft(),scrollTop:u.scrollTop(),width:s?u.width():u.outerWidth(),height:s?u.height():u.outerHeight()}}};e.fn.position=function(C){if(!C||!C.of){return g.apply(this,arguments)}C=e.extend({},C);var D,z,x,B,w,s,y=e(C.of),v=e.position.getWithinInfo(C.within),t=e.position.getScrollInfo(v),A=(C.collision||"flip").split(" "),u={};s=f(y);if(y[0].preventDefault){C.at="left top"}z=s.width;x=s.height;B=s.offset;w=e.extend({},B);e.each(["my","at"],function(){var G=(C[this]||"").split(" "),F,E;if(G.length===1){G=d.test(G[0])?G.concat(["center"]):k.test(G[0])?["center"].concat(G):["center","center"]}G[0]=d.test(G[0])?G[0]:"center";G[1]=k.test(G[1])?G[1]:"center";F=a.exec(G[0]);E=a.exec(G[1]);u[this]=[F?F[0]:0,E?E[0]:0];C[this]=[o.exec(G[0])[0],o.exec(G[1])[0]]});if(A.length===1){A[1]=A[0]}if(C.at[0]==="right"){w.left+=z}else{if(C.at[0]==="center"){w.left+=z/2}}if(C.at[1]==="bottom"){w.top+=x}else{if(C.at[1]==="center"){w.top+=x/2}}D=q(u.at,z,x);w.left+=D[0];w.top+=D[1];return this.each(function(){var F,O,H=e(this),J=H.outerWidth(),G=H.outerHeight(),I=l(this,"marginLeft"),E=l(this,"marginTop"),N=J+I+l(this,"marginRight")+t.width,M=G+E+l(this,"marginBottom")+t.height,K=e.extend({},w),L=q(u.my,H.outerWidth(),H.outerHeight());if(C.my[0]==="right"){K.left-=J}else{if(C.my[0]==="center"){K.left-=J/2}}if(C.my[1]==="bottom"){K.top-=G}else{if(C.my[1]==="center"){K.top-=G/2}}K.left+=L[0];K.top+=L[1];if(!e.support.offsetFractions){K.left=p(K.left);K.top=p(K.top)}F={marginLeft:I,marginTop:E};e.each(["left","top"],function(Q,P){if(e.ui.position[A[Q]]){e.ui.position[A[Q]][P](K,{targetWidth:z,targetHeight:x,elemWidth:J,elemHeight:G,collisionPosition:F,collisionWidth:N,collisionHeight:M,offset:[D[0]+L[0],D[1]+L[1]],my:C.my,at:C.at,within:v,elem:H})}});if(C.using){O=function(S){var U=B.left-K.left,R=U+z-J,T=B.top-K.top,Q=T+x-G,P={target:{element:y,left:B.left,top:B.top,width:z,height:x},element:{element:H,left:K.left,top:K.top,width:J,height:G},horizontal:R<0?"left":U>0?"right":"center",vertical:Q<0?"top":T>0?"bottom":"middle"};if(z<J&&r(U+R)<z){P.horizontal="center"}if(x<G&&r(T+Q)<x){P.vertical="middle"}if(n(r(U),r(R))>n(r(T),r(Q))){P.important="horizontal"}else{P.important="vertical"}C.using.call(this,S,P)}}H.offset(e.extend(K,{using:O}))})};e.ui.position={fit:{left:function(w,v){var u=v.within,y=u.isWindow?u.scrollLeft:u.offset.left,A=u.width,x=w.left-v.collisionPosition.marginLeft,z=y-x,t=x+v.collisionWidth-A-y,s;if(v.collisionWidth>A){if(z>0&&t<=0){s=w.left+z+v.collisionWidth-A-y;w.left+=z-s}else{if(t>0&&z<=0){w.left=y}else{if(z>t){w.left=y+A-v.collisionWidth}else{w.left=y}}}}else{if(z>0){w.left+=z}else{if(t>0){w.left-=t}else{w.left=n(w.left-x,w.left)}}}},top:function(v,u){var t=u.within,z=t.isWindow?t.scrollTop:t.offset.top,A=u.within.height,x=v.top-u.collisionPosition.marginTop,y=z-x,w=x+u.collisionHeight-A-z,s;if(u.collisionHeight>A){if(y>0&&w<=0){s=v.top+y+u.collisionHeight-A-z;v.top+=y-s}else{if(w>0&&y<=0){v.top=z}else{if(y>w){v.top=z+A-u.collisionHeight}else{v.top=z}}}}else{if(y>0){v.top+=y}else{if(w>0){v.top-=w}else{v.top=n(v.top-x,v.top)}}}}},flip:{left:function(y,x){var w=x.within,C=w.offset.left+w.scrollLeft,F=w.width,u=w.isWindow?w.scrollLeft:w.offset.left,z=y.left-x.collisionPosition.marginLeft,D=z-u,t=z+x.collisionWidth-F-u,B=x.my[0]==="left"?-x.elemWidth:x.my[0]==="right"?x.elemWidth:0,E=x.at[0]==="left"?x.targetWidth:x.at[0]==="right"?-x.targetWidth:0,v=-2*x.offset[0],s,A;if(D<0){s=y.left+B+E+v+x.collisionWidth-F-C;if(s<0||s<r(D)){y.left+=B+E+v}}else{if(t>0){A=y.left-x.collisionPosition.marginLeft+B+E+v-u;if(A>0||r(A)<t){y.left+=B+E+v}}}},top:function(x,w){var v=w.within,E=v.offset.top+v.scrollTop,F=v.height,s=v.isWindow?v.scrollTop:v.offset.top,z=x.top-w.collisionPosition.marginTop,B=z-s,y=z+w.collisionHeight-F-s,C=w.my[1]==="top",A=C?-w.elemHeight:w.my[1]==="bottom"?w.elemHeight:0,G=w.at[1]==="top"?w.targetHeight:w.at[1]==="bottom"?-w.targetHeight:0,u=-2*w.offset[1],D,t;if(B<0){t=x.top+A+G+u+w.collisionHeight-F-E;if(x.top+A+G+u>B&&(t<0||t<r(B))){x.top+=A+G+u}}else{if(y>0){D=x.top-w.collisionPosition.marginTop+A+G+u-s;if(x.top+A+G+u>y&&(D>0||r(D)<y)){x.top+=A+G+u}}}}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments);e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments);e.ui.position.fit.top.apply(this,arguments)}}};(function(){var w,y,t,v,u,s=document.getElementsByTagName("body")[0],x=document.createElement("div");w=document.createElement(s?"div":"body");t={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"};if(s){e.extend(t,{position:"absolute",left:"-1000px",top:"-1000px"})}for(u in t){w.style[u]=t[u]}w.appendChild(x);y=s||document.documentElement;y.insertBefore(w,y.firstChild);x.style.cssText="position: absolute; left: 10.7432222px;";v=e(x).offset().left;e.support.offsetFractions=v>10&&v<11;w.innerHTML="";y.removeChild(w)})()})(jQuery);(function(a,b){var c=0;a.widget("ui.autocomplete",{version:"1.10.3",defaultElement:"<input>",options:{appendTo:null,autoFocus:false,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var f,d,g,l=this.element[0].nodeName.toLowerCase(),k=l==="textarea",e=l==="input";this.isMultiLine=k?true:e?false:this.element.prop("isContentEditable");this.valueMethod=this.element[k||e?"val":"text"];this.isNewMenu=true;this.element.addClass("ui-autocomplete-input").attr("autocomplete","off");this._on(this.element,{keydown:function(m){if(this.element.prop("readOnly")){f=true;g=true;d=true;return}f=false;g=false;d=false;var n=a.ui.keyCode;switch(m.keyCode){case n.PAGE_UP:f=true;this._move("previousPage",m);break;case n.PAGE_DOWN:f=true;this._move("nextPage",m);break;case n.UP:f=true;this._keyEvent("previous",m);break;case n.DOWN:f=true;this._keyEvent("next",m);break;case n.ENTER:case n.NUMPAD_ENTER:if(this.menu.active){f=true;m.preventDefault();this.menu.select(m)}break;case n.TAB:if(this.menu.active){this.menu.select(m)}break;case n.ESCAPE:if(this.menu.element.is(":visible")){this._value(this.term);this.close(m);m.preventDefault()}break;default:d=true;this._searchTimeout(m);break}},keypress:function(m){if(f){f=false;if(!this.isMultiLine||this.menu.element.is(":visible")){m.preventDefault()}return}if(d){return}var n=a.ui.keyCode;switch(m.keyCode){case n.PAGE_UP:this._move("previousPage",m);break;case n.PAGE_DOWN:this._move("nextPage",m);break;case n.UP:this._keyEvent("previous",m);break;case n.DOWN:this._keyEvent("next",m);break}},input:function(m){if(g){g=false;m.preventDefault();return}this._searchTimeout(m)},focus:function(){this.selectedItem=null;this.previous=this._value()},blur:function(m){if(this.cancelBlur){delete this.cancelBlur;return}clearTimeout(this.searching);this.close(m);this._change(m)}});this._initSource();this.menu=a("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role:null}).hide().data("ui-menu");this._on(this.menu.element,{mousedown:function(m){m.preventDefault();this.cancelBlur=true;this._delay(function(){delete this.cancelBlur});var n=this.menu.element[0];if(!a(m.target).closest(".ui-menu-item").length){this._delay(function(){var o=this;this.document.one("mousedown",function(p){if(p.target!==o.element[0]&&p.target!==n&&!a.contains(n,p.target)){o.close()}})})}},menufocus:function(n,o){if(this.isNewMenu){this.isNewMenu=false;if(n.originalEvent&&/^mouse/.test(n.originalEvent.type)){this.menu.blur();this.document.one("mousemove",function(){a(n.target).trigger(n.originalEvent)});return}}var m=o.item.data("ui-autocomplete-item");if(false!==this._trigger("focus",n,{item:m})){if(n.originalEvent&&/^key/.test(n.originalEvent.type)){this._value(m.value)}}else{this.liveRegion.text(m.value)}},menuselect:function(o,p){var n=p.item.data("ui-autocomplete-item"),m=this.previous;if(this.element[0]!==this.document[0].activeElement){this.element.focus();this.previous=m;this._delay(function(){this.previous=m;this.selectedItem=n})}if(false!==this._trigger("select",o,{item:n})){this._value(n.value)}this.term=this._value();this.close(o);this.selectedItem=n}});this.liveRegion=a("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertBefore(this.element);this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching);this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete");this.menu.element.remove();this.liveRegion.remove()},_setOption:function(d,e){this._super(d,e);if(d==="source"){this._initSource()}if(d==="appendTo"){this.menu.element.appendTo(this._appendTo())}if(d==="disabled"&&e&&this.xhr){this.xhr.abort()}},_appendTo:function(){var d=this.options.appendTo;if(d){d=d.jquery||d.nodeType?a(d):this.document.find(d).eq(0)}if(!d){d=this.element.closest(".ui-front")}if(!d.length){d=this.document[0].body}return d},_initSource:function(){var f,d,e=this;if(a.isArray(this.options.source)){f=this.options.source;this.source=function(k,g){g(a.ui.autocomplete.filter(f,k.term))}}else{if(typeof this.options.source==="string"){d=this.options.source;this.source=function(k,g){if(e.xhr){e.xhr.abort()}e.xhr=a.ajax({url:d,data:k,dataType:"json",success:function(l){g(l)},error:function(){g([])}})}}else{this.source=this.options.source}}},_searchTimeout:function(d){clearTimeout(this.searching);this.searching=this._delay(function(){if(this.term!==this._value()){this.selectedItem=null;this.search(null,d)}},this.options.delay)},search:function(e,d){e=e!=null?e:this._value();this.term=this._value();if(e.length<this.options.minLength){return this.close(d)}if(this._trigger("search",d)===false){return}return this._search(e)},_search:function(d){this.pending++;this.element.addClass("ui-autocomplete-loading");this.cancelSearch=false;this.source({term:d},this._response())},_response:function(){var e=this,d=++c;return function(f){if(d===c){e.__response(f)}e.pending--;if(!e.pending){e.element.removeClass("ui-autocomplete-loading")}}},__response:function(d){if(d){d=this._normalize(d)}this._trigger("response",null,{content:d});if(!this.options.disabled&&d&&d.length&&!this.cancelSearch){this._suggest(d);this._trigger("open")}else{this._close()}},close:function(d){this.cancelSearch=true;this._close(d)},_close:function(d){if(this.menu.element.is(":visible")){this.menu.element.hide();this.menu.blur();this.isNewMenu=true;this._trigger("close",d)}},_change:function(d){if(this.previous!==this._value()){this._trigger("change",d,{item:this.selectedItem})}},_normalize:function(d){if(d.length&&d[0].label&&d[0].value){return d}return a.map(d,function(e){if(typeof e==="string"){return{label:e,value:e}}return a.extend({label:e.label||e.value,value:e.value||e.label},e)})},_suggest:function(d){var e=this.menu.element.empty();this._renderMenu(e,d);this.isNewMenu=true;this.menu.refresh();e.show();this._resizeMenu();e.position(a.extend({of:this.element},this.options.position));if(this.options.autoFocus){this.menu.next()}},_resizeMenu:function(){var d=this.menu.element;d.outerWidth(Math.max(d.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,d){var f=this;a.each(d,function(g,k){f._renderItemData(e,k)})},_renderItemData:function(d,e){return this._renderItem(d,e).data("ui-autocomplete-item",e)},_renderItem:function(d,e){return a("<li>").append(a("<a>").text(e.label)).appendTo(d)},_move:function(e,d){if(!this.menu.element.is(":visible")){this.search(null,d);return}if(this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)){this._value(this.term);this.menu.blur();return}this.menu[e](d)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,d){if(!this.isMultiLine||this.menu.element.is(":visible")){this._move(e,d);d.preventDefault()}}});a.extend(a.ui.autocomplete,{escapeRegex:function(d){return d.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(f,d){var e=new RegExp(a.ui.autocomplete.escapeRegex(d),"i");return a.grep(f,function(g){return e.test(g.label||g.value||g)})}});a.widget("ui.autocomplete",a.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(d){return d+(d>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var d;this._superApply(arguments);if(this.options.disabled||this.cancelSearch){return}if(e&&e.length){d=this.options.messages.results(e.length)}else{d=this.options.messages.noResults}this.liveRegion.text(d)}})})(jQuery);(function(a,b){a.widget("ui.menu",{version:"1.10.3",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element;this.mouseHandled=false;this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,a.proxy(function(c){if(this.options.disabled){c.preventDefault()}},this));if(this.options.disabled){this.element.addClass("ui-state-disabled").attr("aria-disabled","true")}this._on({"mousedown .ui-menu-item > a":function(c){c.preventDefault()},"click .ui-state-disabled > a":function(c){c.preventDefault()},"click .ui-menu-item:has(a)":function(c){var d=a(c.target).closest(".ui-menu-item");if(!this.mouseHandled&&d.not(".ui-state-disabled").length){this.mouseHandled=true;this.select(c);if(d.has(".ui-menu").length){this.expand(c)}else{if(!this.element.is(":focus")){this.element.trigger("focus",[true]);if(this.active&&this.active.parents(".ui-menu").length===1){clearTimeout(this.timer)}}}}},"mouseenter .ui-menu-item":function(c){var d=a(c.currentTarget);d.siblings().children(".ui-state-active").removeClass("ui-state-active");this.focus(c,d)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,c){var d=this.active||this.element.children(".ui-menu-item").eq(0);if(!c){this.focus(e,d)}},blur:function(c){this._delay(function(){if(!a.contains(this.element[0],this.document[0].activeElement)){this.collapseAll(c)}})},keydown:"_keydown"});this.refresh();this._on(this.document,{click:function(c){if(!a(c.target).closest(".ui-menu").length){this.collapseAll(c)}this.mouseHandled=false}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show();this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var c=a(this);if(c.data("ui-menu-submenu-carat")){c.remove()}});this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(l){var d,k,m,g,f,c=true;function e(n){return n.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}switch(l.keyCode){case a.ui.keyCode.PAGE_UP:this.previousPage(l);break;case a.ui.keyCode.PAGE_DOWN:this.nextPage(l);break;case a.ui.keyCode.HOME:this._move("first","first",l);break;case a.ui.keyCode.END:this._move("last","last",l);break;case a.ui.keyCode.UP:this.previous(l);break;case a.ui.keyCode.DOWN:this.next(l);break;case a.ui.keyCode.LEFT:this.collapse(l);break;case a.ui.keyCode.RIGHT:if(this.active&&!this.active.is(".ui-state-disabled")){this.expand(l)}break;case a.ui.keyCode.ENTER:case a.ui.keyCode.SPACE:this._activate(l);break;case a.ui.keyCode.ESCAPE:this.collapse(l);break;default:c=false;k=this.previousFilter||"";m=String.fromCharCode(l.keyCode);g=false;clearTimeout(this.filterTimer);if(m===k){g=true}else{m=k+m}f=new RegExp("^"+e(m),"i");d=this.activeMenu.children(".ui-menu-item").filter(function(){return f.test(a(this).children("a").text())});d=g&&d.index(this.active.next())!==-1?this.active.nextAll(".ui-menu-item"):d;if(!d.length){m=String.fromCharCode(l.keyCode);f=new RegExp("^"+e(m),"i");d=this.activeMenu.children(".ui-menu-item").filter(function(){return f.test(a(this).children("a").text())})}if(d.length){this.focus(l,d);if(d.length>1){this.previousFilter=m;this.filterTimer=this._delay(function(){delete this.previousFilter},1000)}else{delete this.previousFilter}}else{delete this.previousFilter}}if(c){l.preventDefault()}},_activate:function(c){if(!this.active.is(".ui-state-disabled")){if(this.active.children("a[aria-haspopup='true']").length){this.expand(c)}else{this.select(c)}}},refresh:function(){var e,d=this.options.icons.submenu,c=this.element.find(this.options.menus);c.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var k=a(this),g=k.prev("a"),f=a("<span>").addClass("ui-menu-icon ui-icon "+d).data("ui-menu-submenu-carat",true);g.attr("aria-haspopup","true").prepend(f);k.attr("aria-labelledby",g.attr("id"))});e=c.add(this.element);e.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()});e.children(":not(.ui-menu-item)").each(function(){var f=a(this);if(!/[^\-\u2014\u2013\s]/.test(f.text())){f.addClass("ui-widget-content ui-menu-divider")}});e.children(".ui-state-disabled").attr("aria-disabled","true");if(this.active&&!a.contains(this.element[0],this.active[0])){this.blur()}},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(c,d){if(c==="icons"){this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(d.submenu)}this._super(c,d)},focus:function(d,c){var f,e;this.blur(d,d&&d.type==="focus");this._scrollIntoView(c);this.active=c.first();e=this.active.children("a").addClass("ui-state-focus");if(this.options.role){this.element.attr("aria-activedescendant",e.attr("id"))}this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active");if(d&&d.type==="keydown"){this._close()}else{this.timer=this._delay(function(){this._close()},this.delay)}f=c.children(".ui-menu");if(f.length&&/^mouse/.test(d.type)){this._startOpening(f)}this.activeMenu=c.parent();this._trigger("focus",d,{item:c})},_scrollIntoView:function(f){var l,e,g,c,d,k;if(this._hasScroll()){l=parseFloat(a.css(this.activeMenu[0],"borderTopWidth"))||0;e=parseFloat(a.css(this.activeMenu[0],"paddingTop"))||0;g=f.offset().top-this.activeMenu.offset().top-l-e;c=this.activeMenu.scrollTop();d=this.activeMenu.height();k=f.height();if(g<0){this.activeMenu.scrollTop(c+g)}else{if(g+k>d){this.activeMenu.scrollTop(c+g-d+k)}}}},blur:function(d,c){if(!c){clearTimeout(this.timer)}if(!this.active){return}this.active.children("a").removeClass("ui-state-focus");this.active=null;this._trigger("blur",d,{item:this.active})},_startOpening:function(c){clearTimeout(this.timer);if(c.attr("aria-hidden")!=="true"){return}this.timer=this._delay(function(){this._close();this._open(c)},this.delay)},_open:function(d){var c=a.extend({of:this.active},this.options.position);clearTimeout(this.timer);this.element.find(".ui-menu").not(d.parents(".ui-menu")).hide().attr("aria-hidden","true");d.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(c)},collapseAll:function(d,c){clearTimeout(this.timer);this.timer=this._delay(function(){var e=c?this.element:a(d&&d.target).closest(this.element.find(".ui-menu"));if(!e.length){e=this.element}this._close(e);this.blur(d);this.activeMenu=e},this.delay)},_close:function(c){if(!c){c=this.active?this.active.parent():this.element}c.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(d){var c=this.active&&this.active.parent().closest(".ui-menu-item",this.element);if(c&&c.length){this._close();this.focus(d,c)}},expand:function(d){var c=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();if(c&&c.length){this._open(c.parent());this._delay(function(){this.focus(d,c)})}},next:function(c){this._move("next","first",c)},previous:function(c){this._move("prev","last",c)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(f,d,e){var c;if(this.active){if(f==="first"||f==="last"){c=this.active[f==="first"?"prevAll":"nextAll"](".ui-menu-item").eq(-1)}else{c=this.active[f+"All"](".ui-menu-item").eq(0)}}if(!c||!c.length||!this.active){c=this.activeMenu.children(".ui-menu-item")[d]()}this.focus(e,c)},nextPage:function(e){var d,f,c;if(!this.active){this.next(e);return}if(this.isLastItem()){return}if(this._hasScroll()){f=this.active.offset().top;c=this.element.height();this.active.nextAll(".ui-menu-item").each(function(){d=a(this);return d.offset().top-f-c<0});this.focus(e,d)}else{this.focus(e,this.activeMenu.children(".ui-menu-item")[!this.active?"first":"last"]())}},previousPage:function(e){var d,f,c;if(!this.active){this.next(e);return}if(this.isFirstItem()){return}if(this._hasScroll()){f=this.active.offset().top;c=this.element.height();this.active.prevAll(".ui-menu-item").each(function(){d=a(this);return d.offset().top-f+c>0});this.focus(e,d)}else{this.focus(e,this.activeMenu.children(".ui-menu-item").first())}},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(c){this.active=this.active||a(c.target).closest(".ui-menu-item");var d={item:this.active};if(!this.active.has(".ui-menu").length){this.collapseAll(c,true)}this._trigger("select",c,d)}})})(jQuery);var HEROCALCULATOR=function(a){var a={};a.heroData={};a.itemData={};a.unitData={};a.abilityData={};a.stackableitems=["clarity","flask","dust","ward_observer","ward_sentry","tango","tpscroll","smoke_of_deceit"];a.levelitems=["necronomicon","dagon","diffusal_blade"];a.ItemInput=function(c,b){this.value=ko.observable(c);this.name=ko.observable(b);this.displayname=ko.observable(b+" ")};a.InventoryViewModel=function(){var b=this,c=["smoke_of_deceit","dust","ghost","tranquil_boots","phase_boots","power_treads","buckler","medallion_of_courage","ancient_janggo","mekansm","pipe","veil_of_discord","rod_of_atos","orchid","sheepstick","armlet","invis_sword","ethereal_blade","shivas_guard","manta","mask_of_madness","diffusal_blade","mjollnir","satanic","ring_of_basilius","ring_of_aquila"];b.hasInventory=ko.observable(true);b.items=ko.observableArray();b.activeItems=ko.observableArray([]);b.hasScepter=ko.computed(function(){for(var d=0;d<b.items().length;d++){var e=b.items()[d].item;if(e=="ultimate_scepter"&&b.items()[d].enabled()){return true}}return false},this);b.totalCost=ko.computed(function(){var f=0;for(var d=0;d<b.items().length;d++){var e=b.items()[d].item;if(!b.items()[d].enabled()){continue}if(a.stackableitems.indexOf(e)!=-1){f+=a.itemData["item_"+e].itemcost*b.items()[d].size}else{if(a.levelitems.indexOf(e)!=-1){switch(e){case"diffusal_blade":f+=a.itemData["item_"+e].itemcost+(b.items()[d].size-1)*850;break;case"necronomicon":case"dagon":f+=a.itemData["item_"+e].itemcost+(b.items()[d].size-1)*1250;break;default:f+=a.itemData["item_"+e].itemcost;break}}else{f+=a.itemData["item_"+e].itemcost}}}return f},this);b.addItem=function(e,d){if(b.hasInventory()&&e.selectedItem()!=undefined){var f={item:e.selectedItem(),state:ko.observable(0),size:e.itemInputValue(),enabled:ko.observable(true)};b.items.push(f);if(e.selectedItem()=="ring_of_aquila"||e.selectedItem()=="ring_of_basilius"){b.toggleItem(undefined,f,undefined)}}};b.toggleItem=function(d,f,e){if(c.indexOf(f.item)>=0){if(b.activeItems.indexOf(f)<0){b.activeItems.push(f)}else{b.activeItems.remove(f)}switch(f.item){case"power_treads":if(f.state()<2){f.state(f.state()+1)}else{f.state(0)}break;default:if(f.state()==0){f.state(1)}else{f.state(0)}break}}}.bind(this);b.removeItem=function(d){b.items.remove(d)}.bind(this);b.toggleMuteItem=function(d){d.enabled(!d.enabled())}.bind(this);b.getItemImage=function(d){switch(d.item){case"power_treads":if(d.state()==0){return"/media/images/items/"+d.item+"_str.png"}else{if(d.state()==1){return"/media/images/items/"+d.item+"_int.png"}else{return"/media/images/items/"+d.item+"_agi.png"}}break;case"tranquil_boots":case"ring_of_basilius":if(d.state()==0){return"/media/images/items/"+d.item+".png"}else{return"/media/images/items/"+d.item+"_active.png"}break;case"armlet":if(d.state()==0){return"/media/images/items/"+d.item+".png"}else{return"/media/images/items/"+d.item+"_active.png"}break;case"ring_of_aquila":if(d.state()==0){return"/media/images/items/"+d.item+"_active.png"}else{return"/media/images/items/"+d.item+".png"}break;case"dagon":case"diffusal_blade":case"necronomicon":if(d.size>1){return"/media/images/items/"+d.item+"_"+d.size+".png"}else{return"/media/images/items/"+d.item+".png"}break;default:return"/media/images/items/"+d.item+".png";break}};b.getItemSizeLabel=function(d){if(a.stackableitems.indexOf(d.item)!=-1){return'<span style="font-size:10px">Qty: </span>'+d.size}else{if(a.levelitems.indexOf(d.item)!=-1){return'<span style="font-size:10px">Lvl: </span>'+d.size}else{if(d.item=="bloodstone"){return'<span style="font-size:10px">Charges: </span>'+d.size}else{return""}}}};b.getActiveBorder=function(d){switch(d.item){case"power_treads":case"tranquil_boots":case"ring_of_basilius":case"ring_of_aquila":case"armlet":return 0;break;default:return d.state();break}};b.getItemAttributeValue=function(d,f,g){for(var e=0;e<d.length;e++){if(d[e].name==f){if(g==0){return parseFloat(d[e].value[0])}else{if(g>d[e].value.length){return parseFloat(d[e].value[0])}else{return parseFloat(d[e].value[g-1])}}}}};b.getAttributes=function(m){var n=0;for(var f=0;f<b.items().length;f++){var k=b.items()[f].item;var l=b.activeItems.indexOf(b.items()[f])>=0?true:false;if(!b.items()[f].enabled()){continue}var e=b.items()[f].size;for(var d=0;d<a.itemData["item_"+k].attributes.length;d++){var g=a.itemData["item_"+k].attributes[d];switch(g.name){case"bonus_all_stats":n+=parseInt(g.value[0]);break;case"bonus_stats":n+=parseInt(g.value[0]);break}switch(m){case"agi":if(g.name=="bonus_agility"){if(k=="diffusal_blade"){n+=parseInt(g.value[e-1])}else{n+=parseInt(g.value[0])}}if(g.name=="bonus_stat"&&b.items()[f].state()==2){n+=parseInt(g.value[0])}break;case"int":if(g.name=="bonus_intellect"){if(k=="necronomicon"){n+=parseInt(g.value[e-1])}else{if(k=="diffusal_blade"){n+=parseInt(g.value[e-1])}else{if(k=="dagon"){n+=parseInt(g.value[e-1])}else{n+=parseInt(g.value[0])}}}}if(g.name=="bonus_int"){n+=parseInt(g.value[0])}if(g.name=="bonus_stat"&&b.items()[f].state()==1){n+=parseInt(g.value[0])}break;case"str":if(g.name=="bonus_strength"){if(k=="necronomicon"){n+=parseInt(g.value[e-1])}else{n+=parseInt(g.value[0])}}if(g.name=="bonus_stat"&&b.items()[f].state()==0){n+=parseInt(g.value[0])}if(g.name=="unholy_bonus_strength"&&l){n+=parseInt(g.value[0])}break}}}return n};b.getBash=function(d){var l=1;for(var f=0;f<b.items().length;f++){var k=b.items()[f].item;if(!b.items()[f].enabled()){continue}for(var e=0;e<a.itemData["item_"+k].attributes.length;e++){var g=a.itemData["item_"+k].attributes[e];switch(g.name){case"bash_chance":l*=1-parseInt(g.value[0])/100;break;case"bash_chance_melee":if(d=="DOTA_UNIT_CAP_MELEE_ATTACK"){l*=1-parseInt(g.value[0])/100}break;case"bash_chance_ranged":if(d=="DOTA_UNIT_CAP_RANGED_ATTACK"){l*=1-parseInt(g.value[0])/100}break}}}return l};b.getCritChance=function(){var l=1;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"crit_chance":l*=1-parseInt(f.value[0])/100;break}}}return l};b.getCritSource=function(){var d={};for(var e=0;e<b.items().length;e++){var f=b.items()[e].item;var g=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}switch(f){case"lesser_crit":case"greater_crit":if(d[f]==undefined){d[f]={chance:b.getItemAttributeValue(a.itemData["item_"+f].attributes,"crit_chance",0)/100,multiplier:b.getItemAttributeValue(a.itemData["item_"+f].attributes,"crit_multiplier",0)/100,count:1,displayname:a.itemData["item_"+f].displayname}}else{d[f].count+=1}break}}return d};b.getCleaveSource=function(){var d={};for(var e=0;e<b.items().length;e++){var f=b.items()[e].item;var g=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}switch(f){case"bfury":if(d[f]==undefined){d[f]={radius:b.getItemAttributeValue(a.itemData["item_"+f].attributes,"cleave_radius",0),magnitude:b.getItemAttributeValue(a.itemData["item_"+f].attributes,"cleave_damage_percent",0)/100,count:1,displayname:a.itemData["item_"+f].displayname}}else{d[f].count+=1}break}}return d};b.getBashSource=function(d){var e={};for(var f=0;f<b.items().length;f++){var g=b.items()[f].item;var k=b.activeItems.indexOf(b.items()[f])>=0?true:false;if(!b.items()[f].enabled()){continue}switch(g){case"javelin":if(e[g]==undefined){e[g]={damage:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bonus_chance_damage",1),damagetype:"physical",count:1,chance:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bonus_chance",1)/100,displayname:a.itemData["item_"+g].displayname+" Pierce"}}else{e[g].count+=1}break;case"monkey_king_bar":if(e[g]==undefined){e[g]={item:g,chance:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bash_chance",0)/100,damage:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bash_damage",0),duration:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bash_stun",0),count:1,damagetype:"magic",displayname:a.itemData["item_"+g].displayname}}else{e[g].count+=1}break;case"abyssal_blade":case"basher":if(e[g]==undefined){if(d=="DOTA_UNIT_CAP_MELEE_ATTACK"){e[g]={item:g,chance:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bash_chance_melee",0)/100,damage:0,duration:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bash_duration",0),count:1,damagetype:"physical",displayname:a.itemData["item_"+g].displayname}}else{e[g]={item:g,chance:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bash_chance_ranged",0)/100,damage:0,duration:b.getItemAttributeValue(a.itemData["item_"+g].attributes,"bash_duration",0),count:1,damagetype:"physical",displayname:a.itemData["item_"+g].displayname}}}else{e[g].count+=1}break}}return e};b.getOrbProcSource=function(){var d={};for(var e=0;e<b.items().length;e++){var f=b.items()[e].item;var g=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}switch(f){case"maelstrom":case"mjollnir":if(d[f]==undefined){d[f]={chance:b.getItemAttributeValue(a.itemData["item_"+f].attributes,"chain_chance",0)/100,damage:b.getItemAttributeValue(a.itemData["item_"+f].attributes,"chain_damage",0),count:1,damagetype:"magic",displayname:a.itemData["item_"+f].displayname}}else{d[f].count+=1}break}}return d};b.getOrbSource=function(){var d={};for(var e=0;e<b.items().length;e++){var f=b.items()[e].item;var g=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}switch(f){case"diffusal_blade":if(d[f]==undefined){d[f]={chance:1,damage:b.getItemAttributeValue(a.itemData["item_"+f].attributes,"feedback_mana_burn",b.items()[e].size),count:1,damagetype:"physical",displayname:a.itemData["item_"+f].displayname}}else{d[f].count+=1}break}}return d};b.getHealth=function(){var k=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"bonus_health":k+=parseInt(f.value[0]);break}}}return k};b.getHealthRegen=function(){var l=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"aura_health_regen":l+=parseInt(f.value[0]);break;case"health_regen":l+=parseInt(f.value[0]);break;case"bonus_health_regen":if(g=="tranquil_boots"&&!k){l+=parseInt(f.value[0])}else{if(g!="tranquil_boots"){l+=parseInt(f.value[0])}}break;case"hp_regen":l+=parseInt(f.value[0]);break}}}return l};b.getMana=function(){var k=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"bonus_mana":k+=parseInt(f.value[0]);break}}}return k};b.getManaRegenPercent=function(){var k=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"bonus_mana_regen":k+=parseFloat(f.value[0]);break;case"mana_regen":k+=parseFloat(f.value[0]);break;case"bonus_mana_regen_pct":k+=parseFloat(f.value[0]);break}}}return k/100};b.getManaRegenBloodstone=function(){for(var d=0;d<b.items().length;d++){var e=b.items()[d].item;if(!b.items()[d].enabled()){continue}if(e.indexOf("bloodstone")!=-1){return parseInt(b.items()[d].size)}}return 0};b.getArmor=function(){var l=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"bonus_armor":if(!k||g!="medallion_of_courage"){l+=parseInt(f.value[0])}break;case"aura_positive_armor":l+=parseInt(f.value[0]);break;case"bonus_aoe_armor":case"aura_bonus_armor":if(k){l+=parseInt(f.value[0])}break;case"heal_bonus_armor":if(k){l+=parseInt(f.value[0])}break;case"armor_aura":l+=parseInt(f.value[0]);break}}}return l};b.getEvasion=function(){var l=1;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"bonus_evasion":l*=1-parseInt(f.value[0])/100;break}}}return l};b.getMovementSpeedFlat=function(){var l=0,k=false,d=false,m=["boots","phase_boots","arcane_boots","travel_boots","power_treads","tranquil_boots"];for(var g=0;g<b.items().length;g++){var o=b.items()[g].item;var n=b.activeItems.indexOf(b.items()[g])>=0?true:false;if(!b.items()[g].enabled()){continue}for(var f=0;f<a.itemData["item_"+o].attributes.length;f++){var e=a.itemData["item_"+o].attributes[f];switch(e.name){case"bonus_movement_speed":if(!k&&m.indexOf(o)>=0){if(o!="tranquil_boots"||o=="tranquil_boots"&&!n){l+=parseInt(e.value[0]);k=true}}else{if(!d&&o=="cyclone"){l+=parseInt(e.value[0]);d=true}}break;case"broken_movement_speed":if(!k&&m.indexOf(o)>=0){if(o=="tranquil_boots"&&n){l+=parseInt(e.value[0]);k=true}}break;case"bonus_movement":if(!k&&m.indexOf(o)>=0){l+=parseInt(e.value[0]);k=true}break}}}return l};b.getMovementSpeedPercent=function(){var n=0,r=false,f=false,o=false,e=false,p=false,l=false,m=["manta","yasha","sange_and_yasha"];for(var k=0;k<b.items().length;k++){var s=b.items()[k].item;var q=b.activeItems.indexOf(b.items()[k])>=0?true:false;if(!b.items()[k].enabled()){continue}for(var g=0;g<a.itemData["item_"+s].attributes.length;g++){var d=a.itemData["item_"+s].attributes[g];switch(d.name){case"movement_speed_percent_bonus":if(!r&&m.indexOf(s)>=0){n+=parseInt(d.value[0]);r=true}break;case"bonus_aura_movement_speed_pct":if(!f&&s=="ancient_janggo"){n+=parseInt(d.value[0]);f=true}break;case"phase_movement_speed":if(q&&!e){n+=parseInt(d.value[0]);e=true}break;case"bonus_movement_speed_pct":if(q&&!o&&s=="ancient_janggo"){n+=parseInt(d.value[0]);o=true}break;case"windwalk_movement_speed":if(q&&!p&&s=="invis_sword"){n+=parseInt(d.value[0]);p=true}break;case"berserk_bonus_movement_speed":if(q&&!l&&s=="mask_of_madness"){n+=parseInt(d.value[0]);l=true}break;case"bonus_movement_speed":if(!r&&s=="manta"){n+=parseInt(d.value[0]);r=true}else{if(s=="smoke_of_deceit"&&q){n+=parseInt(d.value[0])}}break}}}return n/100};b.getMovementSpeedPercentReduction=function(){var l=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"movespeed":if(g=="dust"&&k){l+=parseInt(f.value[0])}break}}}return l/100};b.getBonusDamage=function(){var m=0;var e={};for(var f=0;f<b.items().length;f++){var k=b.items()[f].item;var l=b.activeItems.indexOf(b.items()[f])>=0?true:false;if(!b.items()[f].enabled()){continue}for(var d=0;d<a.itemData["item_"+k].attributes.length;d++){var g=a.itemData["item_"+k].attributes[d];switch(g.name){case"bonus_damage":m+=parseInt(g.value[0]);if(e[k]==undefined){e[k]={damage:parseInt(g.value[0]),damagetype:"physical",count:1,displayname:a.itemData["item_"+k].displayname}}else{e[k].count+=1}break;case"unholy_bonus_damage":if(l){m+=parseInt(g.value[0]);if(e[k+"_active"]==undefined){e[k+"_active"]={damage:parseInt(g.value[0]),damagetype:"physical",count:1,displayname:a.itemData["item_"+k].displayname+" Unholy Strength"}}else{e[k].count+=1}}break}}}return{sources:e,total:m}};b.getBonusDamagePercent=function(){var m=0;var e={};for(var f=0;f<b.items().length;f++){var k=b.items()[f].item;var l=b.activeItems.indexOf(b.items()[f])>=0?true:false;if(!b.items()[f].enabled()){continue}for(var d=0;d<a.itemData["item_"+k].attributes.length;d++){var g=a.itemData["item_"+k].attributes[d];switch(g.name){case"damage_aura":m+=parseInt(g.value[0])/100;if(e[k]==undefined){e[k]={damage:parseInt(g.value[0])/100,damagetype:"physical",count:1,displayname:a.itemData["item_"+k].displayname}}else{e[k].count+=1}break}}}return{sources:e,total:m}};b.getAttackSpeed=function(){var l=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"bonus_attack_speed":l+=parseInt(f.value[0]);break;case"bonus_speed":l+=parseInt(f.value[0]);break;case"aura_attack_speed":if(g!="shivas_guard"){l+=parseInt(f.value[0])}break;case"bonus_aura_attack_speed_pct":l+=parseInt(f.value[0]);break;case"bonus_attack_speed_pct":if(k){l+=parseInt(f.value[0])}break;case"unholy_bonus_attack_speed":if(k){l+=parseInt(f.value[0])}break;case"berserk_bonus_attack_speed":if(k){l+=parseInt(f.value[0])}break}}}return l};b.getLifesteal=function(){var l=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"lifesteal_percent":if(g=="satanic"){if(!k){return parseInt(f.value[0])}}else{return parseInt(f.value[0])}break;case"unholy_lifesteal_percent":if(k){return parseInt(f.value[0])}break}}}return l};b.getLifestealAura=function(){var l=0;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"vampiric_aura":return parseInt(f.value[0]);break}}}return l};b.getMagicResist=function(){var n=0;for(var f=0;f<b.items().length;f++){var k=b.items()[f].item;var l=b.activeItems.indexOf(b.items()[f])>=0?true:false;if(!b.items()[f].enabled()){continue}for(var e=0;e<a.itemData["item_"+k].attributes.length;e++){var g=a.itemData["item_"+k].attributes[e];switch(g.name){case"bonus_magical_armor":var m=parseInt(g.value[0]);if(m>n){n=m}break;case"bonus_spell_resist":var m=parseInt(g.value[0]);if(m>n){n=m}break;case"magic_resistance":var m=parseInt(g.value[0]);if(m>n){n=m}break}}}return n};b.getMagicResistReduction=function(){var l=1;for(var e=0;e<b.items().length;e++){var g=b.items()[e].item;var k=b.activeItems.indexOf(b.items()[e])>=0?true:false;if(!b.items()[e].enabled()){continue}if(k){for(var d=0;d<a.itemData["item_"+g].attributes.length;d++){var f=a.itemData["item_"+g].attributes[d];switch(f.name){case"ethereal_damage_bonus":case"resist_debuff":l*=1-parseInt(f.value[0])/100;break}}}}return l};b.itemOptions=ko.observableArray([]);for(i in a.itemData){b.itemOptions.push(new a.ItemInput(i.replace("item_",""),a.itemData[i].displayname))}return b};return a}(HEROCALCULATOR);var HEROCALCULATOR=function(o){var a={};function e(s){var u=s.description;for(var q=0;q<s.attributes.length;q++){if(s.attributes[q].name!=null){var r=s.attributes[q].name;var v=s.attributes[q].value[0];for(var p=1;p<s.attributes[q].value.length;p++){v+=" / "+s.attributes[q].value[p]}var t=new RegExp("%"+r+"%","gi");u=u.replace(t,v)}}var t=new RegExp("%%","gi");u=u.replace(t,"%");t=new RegExp("\n","gi");u=u.replace(/\\n/g,"<br>");return u}var n={$health:"Health",$mana:"Mana",$armor:"Armor",$damage:"Damage",$str:"Strength",$int:"Intelligence",$agi:"Agility",$all:"All Attributes",$attack:"Attack Speed",$hp_regen:"HP Regeneration",$mana_regen:"Mana Regeneration",$move_speed:"Movement Speed",$evasion:"Evasion",$spell_resist:"Spell Resistance",$selected_attribute:"Selected Attribute"};function c(u){var q="";for(var t=0;t<u.attributes.length;t++){if(u.attributes[t].tooltip!=null){var s=u.attributes[t].tooltip;var x=u.attributes[t].value[0];for(var r=1;r<u.attributes[t].value.length;r++){x+=" / "+u.attributes[t].value[r]}var v=s.indexOf("%");if(v==0){x=x+"%";s=s.slice(1)}var w=s.indexOf("$");if(w!=-1){q=q+s.slice(0,w)+" "+x+" "+n[s.slice(w)]+"<br>"}else{q=q+s+" "+x+"<br>"}}}return q.trim("<br>")}function m(q){var r="";for(var p=0;p<q.cooldown.length;p++){r=r+" "+q.cooldown[p]}return r}function k(q){var r="";for(var p=0;p<q.manacost.length;p++){if(q.manacost[p]>0){r=r+" "+q.manacost[p]}}return r}o.getItemTooltipData=function(r){if(o.itemData["item_"+r]==undefined){return undefined}if(a[r]==undefined){var s=o.itemData["item_"+r];var t=$("<div>");t.append($("<span>").html(s.displayname).attr("id","item_name").addClass("item_field"));t.append($("<span>").html(s.itemcost).attr("id","item_cost").addClass("item_field"));t.append($("<hr>"));if(s.description!=null){t.append($("<div>").html(e(s)).attr("id","item_description").addClass("item_field"))}var v=c(s);if(v!=""){t.append($("<div>").html(v).attr("id","item_attributes").addClass("item_field"))}var u=m(s);var p=k(s);if(u!=""||p!=""){var q=$("<div>").attr("id","item_cdmana");if(u!=""){q.append($("<span>").html(u).attr("id","item_cooldown").addClass("item_field"))}if(p!=""){q.append($("<span>").html(p).attr("id","item_manacost").addClass("item_field"))}t.append(q)}if(s.lore!=null){t.append($("<div>").html(s.lore).attr("id","item_lore").addClass("item_field"))}a[r]=t.html();return t.html()}else{return a[r]}};var b={};function l(s){var u=s.description;for(var q=0;q<s.attributes.length;q++){if(s.attributes[q].name!=null){var r=s.attributes[q].name;var v=s.attributes[q].value[0];for(var p=1;p<s.attributes[q].value.length;p++){v+=" / "+s.attributes[q].value[p]}t=new RegExp("%"+r+"%","gi");u=u.replace(t,v)}}var t=new RegExp("%%","gi");u=u.replace(t,"%");t=new RegExp("\n","gi");u=u.replace(/\\n/g,"<br>");return u}function g(y){var x="";for(var s=0;s<y.attributes.length;s++){if(y.attributes[s].tooltip!=null){var t=y.attributes[s].tooltip;var v=y.attributes[s].value[0];for(var r=1;r<y.attributes[s].value.length;r++){v+=" / "+y.attributes[s].value[r]}var q=t.indexOf("%");if(q==0){if(v.toString().indexOf("/")==-1){v=v+"%"}else{var u=new RegExp("/","gi");v=v.replace(u,"%/")+"%"}t=t.slice(1)}var w=t.indexOf("$");x=x+t+" "+v+"<br>"}}return x.trim("<br>")}function d(q){var r="";for(var p=0;p<4;p++){if(q.manacost[p]!=null){r=r+" "+q.manacost[p]}}return r}function f(q){var r="";for(var p=0;p<4;p++){if(q.cooldown[p]!=null){r=r+" "+q.cooldown[p]}}return r}o.getAbilityTooltipData=function(t,r){if(b[r]==undefined){var p=r;var x={};if(o.heroData[t]==undefined){for(var v=0;v<o.unitData[t].abilities.length;v++){if(o.unitData[t].abilities[v].name==r){x=o.unitData[t].abilities[v]}}}else{for(var v=0;v<o.heroData[t].abilities.length;v++){if(o.heroData[t].abilities[v].name==r){x=o.heroData[t].abilities[v]}}}var u=$("<div>");u.append($("<span>").html(x.displayname).attr("id","item_name").addClass("item_field"));u.append($("<hr>"));if(x.description!=null){u.append($("<div>").html(l(x)).attr("id","item_description").addClass("item_field"))}var y=g(x);if(y!=""){u.append($("<div>").html(y).attr("id","item_attributes").addClass("item_field"))}var s=d(x);var q=f(x);if(s!=""||q!=""){var w=$("<div>").attr("id","item_cdmana");if(q!=""){w.append($("<span>").html(q.trim()).attr("id","item_cooldown").addClass("item_field"))}if(s!=""){w.append($("<span>").html(s.trim()).attr("id","item_manacost").addClass("item_field"))}u.append(w)}if(x.lore!=null){u.append($("<div>").html(x.lore).attr("id","item_lore").addClass("item_field"))}b[r]=u.html();return u.html()}else{return b[r]}};return o}(HEROCALCULATOR);var HEROCALCULATOR=function(a){a.abilityData={alchemist_acid_spray:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"armor_reduction",label:"Total Damage",controltype:"text",fn:function(c,b){return -b},returnproperty:"armorreduction"}],alchemist_unstable_concoction:[{label:"Brew Time",controltype:"input"},{attributename:"max_damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b/5}},{attributename:"max_stun",label:"Total Stun",controltype:"text",fn:function(c,b){return c*b/5}}],ancient_apparition_cold_feet:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"stun_duration",label:"Total Stun",controltype:"text",fn:function(c,b){return b}}],ancient_apparition_ice_blast:[{label:"Duration",controltype:"input"},{attributename:"dot_damage",label:"Total Damage",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")+c*b}}],antimage_mana_void:[{label:"Enemy Missing Mana",controltype:"input"},{attributename:"mana_void_damage_per_mana",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],axe_battle_hunger:[{label:"Battle Hungered Enemies",controltype:"input"},{attributename:"speed_bonus",label:"Movement Speed Bonus",controltype:"text",nolevel:true,fn:function(c,b){return c*b},returnproperty:"movementspeedpct"},{attributename:"slow",label:"Movement Speed Bonus",controltype:"text",nolevel:true,fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"}],bane_nightmare:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],bane_fiends_grip:[{label:"Duration",controltype:"input"},{label:"Enemy Max Mana",controltype:"input"},{attributename:"fiend_grip_damage",label:"Total Damage",controltype:"text",controls:[0,1],fn:function(c,b,e,d){if(e.inventory.hasScepter()){return c[0]*e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"fiend_grip_damage_scepter",e.ability().abilities()[d].level())}else{return c[0]*b}}},{attributename:"fiend_grip_mana_drain",label:"Total Mana Drain",controltype:"text",controls:[0,1],nolevel:true,fn:function(c,b,e,d){if(e.inventory.hasScepter()){return c[0]*c[1]*e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"fiend_grip_mana_drain_scepter",e.ability().abilities()[d].level())/100}else{return c[0]*c[1]*b/100}}}],batrider_sticky_napalm:[{label:"Stacks",controltype:"input"},{attributename:"damage",label:"Total Bonus Damage",controltype:"text",fn:function(c,b){return c*b},returnproperty:"bonusdamage"},{attributename:"movement_speed_pct",label:"Enemy Movement Speed Slow",controltype:"text",fn:function(c,b){return c*b},returnproperty:"movementspeedpctreduction"},{attributename:"turn_rate_pct",label:"Enemy Turn Rate Slow",controltype:"text",fn:function(c,b){return b},returnproperty:"turnratereduction"}],batrider_firefly:[{label:"Duration",controltype:"input"},{attributename:"damage_per_second",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],bloodseeker_bloodrage:[{label:"Duration",controltype:"input"},{label:"DAMAGE OVER TIME:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}},{attributename:"damage_increase_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"bonusdamagepct"}],bloodseeker_rupture:[{label:"Enemy Distance Traveled",controltype:"input"},{attributename:"movement_damage_pct",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")+c*b/100}}],bristleback_viscous_nasal_goo:[{label:"Stacks",controltype:"input"},{attributename:"armor_per_stack",label:"Enemy Armor Reduction",controltype:"text",fn:function(c,b){return -c*b},returnproperty:"armorreduction"},{attributename:"move_slow_per_stack",label:"%SLOW:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d,f){return -(f.getAbilityAttributeValue(f.abilities()[d].attributes(),"base_move_slow",0)+c*b)},returnproperty:"movementspeedpctreduction"}],bristleback_quill_spray:[{label:"Stacks",controltype:"input"},{attributename:"quill_stack_damage",label:"DAMAGE",controltype:"text",fn:function(d,c,f,e){var g=f.ability().getAbilityAttributeValue(f.ability().abilities()[e].attributes(),"quill_base_damage",f.ability().abilities()[e].level())+d*c,b=f.ability().getAbilityAttributeValue(f.ability().abilities()[e].attributes(),"max_damage",0);if(g>b){g=b}return g}}],bristleback_warpath:[{label:"Stacks",controltype:"input"},{attributename:"damage_per_stack",label:"BONUS DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){if(c<1){return 0}else{return e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"base_damage",e.ability().abilities()[d].level())+(c-1)*b}}},{attributename:"move_speed_per_stack",label:"%MOVEMENT:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){if(c<1){return 0}else{return e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"base_move_speed",e.ability().abilities()[d].level())+(c-1)*b}},returnproperty:"movementspeedpct"}],centaur_return:[{label:"Strength",controltype:"input"},{attributename:"strength_pct",label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"return_damage",e.ability().abilities()[d].level())+c*b/100}}],centaur_stampede:[{label:"Strength",controltype:"input"},{attributename:"strength_damage",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"slow_movement_speed",label:"Enemy Movement Speed Slow",controltype:"text",fn:function(c,b){return -b},returnproperty:"movementspeedpctreduction"}],crystal_maiden_frostbite:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],dark_seer_ion_shell:[{label:"Duration",controltype:"input"},{attributename:"damage_per_second",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],dazzle_shadow_wave:[{label:"Targets",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],dazzle_weave:[{label:"Duration",controltype:"input"},{attributename:"armor_per_second",label:"ARMOR",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"armor"},{attributename:"armor_per_second",label:"ARMOR REDUCTION:",ignoretooltip:true,controltype:"text",fn:function(c,b){return -c*b},returnproperty:"armorreduction"}],death_prophet_exorcism:[{label:"Damage Dealt",controltype:"input"},{attributename:"heal_percent",label:"Total Armor",controltype:"text",fn:function(c,b){return c*b/100}}],disruptor_static_storm:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,f,d){var e=0.25*(130+40*f.ability().abilities()[d].level())*(1/20),g=c*4*(c*4+1)/2;return e*g}}],doom_bringer_scorched_earth:[{label:"Duration",controltype:"input"},{attributename:"damage_per_second",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"bonus_movement_speed_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpct"},{attributename:"damage_per_second",label:"HP REGEN:",ignoretooltip:true,controltype:"text",fn:function(c,b){return b},returnproperty:"healthregen"}],doom_bringer_doom:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b,e,d){if(e.inventory.hasScepter()){return c*e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"damage_scepter",e.ability().abilities()[d].level())}else{return c*b}}}],dragon_knight_elder_dragon_form:[{label:"Duration",controltype:"input"},{attributename:"bonus_attack_range",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"attackrange"},{attributename:"bonus_movement_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedflat"}],drow_ranger_trueshot:[{label:"Drow's Agility",controltype:"input",display:"buff"},{attributename:"trueshot_ranged_damage",label:"DAMAGE BONUS:",ignoretooltip:true,controltype:"text",display:"buff",fn:function(c,b){return c*b/100},returnproperty:"bonusdamageprecisionaura"}],earth_spirit_rolling_boulder:[{label:"Using Stone",controltype:"checkbox"},{attributename:"move_slow",label:"Total Damage",controltype:"text",fn:function(c,b,e,d,f){if(c){return -b}else{return 0}},returnproperty:"movementspeedpctreduction"},{attributename:"attack_slow",label:"Total Damage",controltype:"text",fn:function(c,b,e,d,f){if(c){return -b}else{return 0}},returnproperty:"attackspeedreduction"}],earthshaker_echo_slam:[{label:"Enemies in Range",controltype:"input"},{attributename:"echo_slam_echo_damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],elder_titan_ancestral_spirit:[{label:"HEROES PASSED THROUGH",controltype:"input"},{label:"CREEPS PASSED THROUGH",controltype:"input"},{attributename:"damage_creeps",label:"DAMAGE:",ignoretooltip:true,controltype:"text",controls:[0,1],fn:function(c,b,e,d){return c[0]*e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"damage_heroes",e.ability().abilities()[d].level())+c[1]*b},returnproperty:"bonusdamage"},{attributename:"move_pct_creeps",label:"%BONUS SPEED:",ignoretooltip:true,controltype:"text",controls:[0,1],fn:function(c,b,e,d){return c[0]*e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"move_pct_heroes",e.ability().abilities()[d].level())+c[1]*b},returnproperty:"movementspeedpct"}],elder_titan_earth_splitter:[{label:"Enemy Max Health",controltype:"input"},{attributename:"damage_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b/100}},{attributename:"slow_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return -b},returnproperty:"movementspeedpctreduction"}],enchantress_natures_attendants:[{label:"Duration",controltype:"input"},{attributename:"heal",label:"HEAL:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"wisp_count",e.ability().abilities()[d].level())*c*b}}],enigma_malefice:[{label:"Hits",controltype:"input"},{attributename:"damage",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"stun_duration",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],enigma_midnight_pulse:[{label:"Duration",controltype:"input"},{label:"Enemy Max Health",controltype:"input"},{attributename:"damage_percent",label:"DAMAGE:",ignoretooltip:true,controltype:"text",controls:[0,1],fn:function(c,b,e,d){return c[0]*c[1]*b/100}}],enigma_black_hole:[{label:"Duration",controltype:"input"},{attributename:"far_damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"near_damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],faceless_void_time_lock:[{label:"In Chronosphere",controltype:"checkbox"},{attributename:"bonus_damage",label:"%MOVESPEED AS DAMAGE",controltype:"text",fn:function(c,b){if(c){return b*2}else{return b}},returnproperty:"bashbonusdamage"},{attributename:"duration",label:"Total Damage",controltype:"text",fn:function(c,b){return b}},{attributename:"chance_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"bash"}],gyrocopter_rocket_barrage:[{label:"Rockets",controltype:"input"},{attributename:"rockets_per_second",label:"Total Damage",controltype:"text",fn:function(c,b){return b}},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],huskar_burning_spear:[{label:"Stacks",controltype:"input"},{attributename:"health_cost",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],huskar_berserkers_blood:[{label:"Stacks",controltype:"input"},{attributename:"resistance_per_stack",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b},returnproperty:"magicresist"},{attributename:"attack_speed_bonus_per_stack",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b},returnproperty:"attackspeed"}],huskar_life_break:[{label:"Enemy Current HP",controltype:"input"},{attributename:"health_damage",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{label:"Huskar Current HP",controltype:"input"},{attributename:"health_cost_percent",label:"DAMAGE TAKEN:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"movespeed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"}],invoker_quas:[{label:"Instances",controltype:"input"},{attributename:"bonus_strength",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"bonusstrength"},{attributename:"health_regen_per_instance",label:"HP REGEN:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"healthregen"}],invoker_wex:[{label:"Instances",controltype:"input"},{attributename:"bonus_agility",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"bonusagility"},{attributename:"move_speed_per_instance",label:"%MOVE SPEED:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"movementspeedpct"},{attributename:"attack_speed_per_instance",label:"%ATTACK SPEED:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"attackspeed"}],invoker_exort:[{label:"Instances",controltype:"input"},{attributename:"bonus_intelligence",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"bonusint"},{attributename:"bonus_damage_per_instance",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"bonusdamage"}],invoker_ghost_walk:[{label:"Quas Level",controltype:"input"},{attributename:"enemy_slow",label:"Total Damage",controltype:"text",fn:function(c,b,e,d,f){if(c==0){return 0}return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"enemy_slow",c)},returnproperty:"movementspeedpctreduction"},{label:"Wex Level",controltype:"input",display:"ability"},{attributename:"self_slow",label:"Total Damage",controltype:"text",display:"ability",fn:function(c,b,e,d,f){if(c==0){return 0}return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"self_slow",c)},returnproperty:"movementspeedpct"}],invoker_alacrity:[{label:"Wex Level",controltype:"input"},{attributename:"bonus_attack_speed",label:"Total Damage",controltype:"text",fn:function(c,b,e,d,f){if(c==0){return 0}return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"bonus_attack_speed",c)},returnproperty:"attackspeed"},{label:"Exort Level",controltype:"input"},{attributename:"bonus_damage",label:"Total Damage",controltype:"text",fn:function(c,b,e,d,f){if(c==0){return 0}return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"bonus_damage",c)},returnproperty:"bonusdamage"}],invoker_ice_wall:[{label:"Quas Level",controltype:"input"},{attributename:"slow",label:"Total Damage",controltype:"text",fn:function(c,b,e,d,f){if(c==0){return 0}return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"slow",c)},returnproperty:"movementspeedpctreduction"},{label:"Exort Level",controltype:"input",display:"ability"},{label:"Duration",controltype:"input",display:"ability"},{attributename:"damage_per_second",label:"DAMAGE:",ignoretooltip:true,controltype:"text",display:"ability",controls:[1,2],fn:function(c,b,e,d,f){if(c[0]==0){return 0}return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"damage_per_second",c[0])*c[1]}}],jakiro_dual_breath:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*2+e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"burn_damage",e.ability().abilities()[d].level())*c}},{attributename:"slow_movement_speed_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"},{attributename:"slow_attack_speed_pct",label:"%ATTACK SLOW:",ignoretooltip:true,controltype:"text",fn:function(c,b){return b},returnproperty:"attackspeedreduction"}],jakiro_liquid_fire:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"slow_attack_speed_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"attackspeedreduction"}],jakiro_macropyre:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],juggernaut_blade_fury:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],juggernaut_healing_ward:[{label:"Duration",controltype:"input"},{label:"Max Health",controltype:"input"},{attributename:"healing_ward_heal_amount",label:"HEAL OVER TIME:",ignoretooltip:true,controltype:"text",controls:[0,1],fn:function(c,b,e,d){return c[0]*c[1]*b/100}}],juggernaut_omni_slash:[{label:"Jumps",controltype:"input"},{label:"MIN DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"omni_slash_damage",1)*c}},{label:"MAX DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"omni_slash_damage",2)*c}}],keeper_of_the_light_illuminate:[{label:"Duration",controltype:"input"},{attributename:"damage_per_second",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}}],keeper_of_the_light_mana_leak:[{label:"Distance Moved",controltype:"input"},{label:"Enemy Max Mana",controltype:"input"},{attributename:"mana_leak_pct",label:"MANA LEAKED:",ignoretooltip:true,controltype:"text",controls:[0,1],fn:function(c,b,e,d){return c[0]/100*c[1]*b/100}}],leshrac_pulse_nova:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"mana_cost_per_second",label:"MANA COST:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}}],lich_chain_frost:[{label:"Bounce Hits",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"slow_movement_speed",label:"Enemy Movement Speed Slow",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"},{attributename:"slow_attack_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"attackspeedreduction"}],life_stealer_feast:[{label:"Enemy Current HP",controltype:"input"},{attributename:"hp_leech_percent",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b/100},returnproperty:"bonusdamage"}],life_stealer_open_wounds:[{label:"Duration",controltype:"input"},{attributename:"heal_percent",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"lifesteal"},{attributename:"slow_steps",label:"%SLOW:",ignoretooltip:true,controltype:"text",nolevel:true,fn:function(c,b,e,d,f){return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"slow_steps",c+1)},returnproperty:"movementspeedpctreduction"}],lina_fiery_soul:[{label:"Duration",controltype:"input"},{attributename:"fiery_soul_move_speed_bonus",label:"Enemy Movement Speed Slow",controltype:"text",fn:function(c,b){return c*b},returnproperty:"movementspeedpct"},{attributename:"fiery_soul_attack_speed_bonus",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b},returnproperty:"attackspeed"}],lion_mana_drain:[{label:"Duration",controltype:"input"},{attributename:"mana_per_second",label:"MANA DRAINED:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}}],luna_moon_glaive:[{label:"Bounces",controltype:"input"},{label:"Damage",controltype:"input"},{attributename:"damage_reduction_percent",label:"BOUNCE DAMAGE:",ignoretooltip:true,controltype:"text",controls:[0,1],fn:function(c,b,e,d){return c[1]*Math.pow(b/100,c[0])}}],luna_eclipse:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],medusa_mystic_snake:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],meepo_poof:[{label:"Meepo Count",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],meepo_geostrike:[{label:"Stacks",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d,f){return f.getAbilityPropertyValue(f.abilities()[d],"damage")*c}},{attributename:"slow",label:"%SLOW:",ignoretooltip:true,controltype:"text",nolevel:true,fn:function(c,b,e,d,f){return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"slow",f.abilities()[d].level())*c},returnproperty:"movementspeedpctreduction"}],mirana_arrow:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],morphling_morph_agi:[{label:"Shifts",controltype:"input"},{attributename:"points_per_tick",label:"AGI SHIFT GAIN:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"bonusagility"},{attributename:"points_per_tick",label:"STR SHIFT LOSS:",ignoretooltip:true,controltype:"text",fn:function(c,b){return -c*b},returnproperty:"bonusstrength"},{attributename:"bonus_attributes",label:"SHIFT TIME:",controltype:"text",fn:function(c,b){return b},returnproperty:"bonusagility2"},{attributename:"morph_cooldown",label:"SHIFT TIME:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"mana_cost",label:"SHIFT MANA COST:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return c*b*e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"morph_cooldown",e.ability().abilities()[d].level())}}],morphling_morph_str:[{label:"Shifts",controltype:"input"},{attributename:"points_per_tick",label:"STR SHIFT GAIN:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"bonusstrength"},{attributename:"points_per_tick",label:"AGI SHIFT LOSS:",ignoretooltip:true,controltype:"text",fn:function(c,b){return -c*b},returnproperty:"bonusagility"},{attributename:"bonus_attributes",label:"SHIFT TIME:",controltype:"text",fn:function(c,b){return b},returnproperty:"bonusstrength2"},{attributename:"morph_cooldown",label:"SHIFT TIME:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"mana_cost",label:"SHIFT MANA COST:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return c*b*e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"morph_cooldown",e.ability().abilities()[d].level())}}],furion_force_of_nature:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],furion_wrath_of_nature:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],necrolyte_heartstopper_aura:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],necrolyte_sadist:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],night_stalker_crippling_fear:[{label:"Is Night",controltype:"checkbox"},{attributename:"bonus_attack_speed_night",label:"%CHANCE TO MISS:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d,f){if(c){return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"miss_rate_night",f.abilities()[d].level())}else{return f.getAbilityAttributeValue(f.abilities()[d].attributes(),"miss_rate_day",f.abilities()[d].level())}},returnproperty:"misschance"}],night_stalker_hunter_in_the_night:[{label:"Is Night",controltype:"checkbox"},{attributename:"bonus_attack_speed_night",label:"Total Damage",controltype:"text",fn:function(c,b){if(c){return b}else{return 0}},returnproperty:"attackspeed"},{attributename:"bonus_movement_speed_pct_night",label:"Total Damage",controltype:"text",fn:function(c,b){if(c){return b}else{return 0}},returnproperty:"movementspeedpct"}],obsidian_destroyer_arcane_orb:[{label:"Current Mana",controltype:"input"},{attributename:"mana_pool_damage_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b/100},returnproperty:"bonusdamageorb"}],ogre_magi_ignite:[{label:"Duration",controltype:"input"},{attributename:"burn_damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"slow_movement_speed_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"}],pudge_rot:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d,f){return f.getAbilityPropertyValue(f.abilities()[d],"damage")*c}},{attributename:"rot_slow",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"}],pudge_flesh_heap:[{label:"Stacks",controltype:"input"},{attributename:"flesh_heap_strength_buff_amount",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b},returnproperty:"bonusstrength"},{attributename:"flesh_heap_magic_resist",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"magicresist"}],pudge_dismember:[{label:"Duration",controltype:"input"},{attributename:"dismember_damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],pugna_nether_ward:[{label:"Enemy Mana Spent",controltype:"input"},{attributename:"mana_multiplier",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"mana_regen",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"manaregenreduction"}],pugna_life_drain:[{label:"Duration",controltype:"input"},{attributename:"health_drain",label:"HEALTH DRAINED:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}}],queenofpain_shadow_strike:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],razor_plasma_field:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],razor_static_link:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],razor_eye_of_the_storm:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],rubick_fade_bolt:[{label:"Jumps",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b,e,d,f){return b*(1-c*f.getAbilityAttributeValue(f.abilities()[d].attributes(),"jump_damage_reduction_pct",f.abilities()[d].level())/100)}},{attributename:"hero_attack_damage_reduction",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"bonusdamagereduction"}],sandking_sand_storm:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],sandking_epicenter:[{label:"Pulses",controltype:"input"},{attributename:"epicenter_damage",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"epicenter_slow",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"},{attributename:"epicenter_slow_as",label:"%ATTACK SLOW:",ignoretooltip:true,controltype:"text",fn:function(c,b){return b},returnproperty:"attackspeedreduction"}],shadow_demon_shadow_poison:[{label:"Duration",controltype:"input"},{attributename:"stack_damage",label:"Total Damage",controltype:"text",fn:function(d,c){var b=[1,2,4,8];if(d>4){return c*b[3]+50*(d-4)}else{if(d<=0){return 0}else{return c*b[d-1]}}}}],nevermore_necromastery:[{label:"Souls",controltype:"input"},{attributename:"necromastery_damage_per_soul",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"bonusdamage"}],nevermore_requiem:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],shadow_shaman_shackles:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],silencer_curse_of_the_silent:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],silencer_glaives_of_wisdom:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],skywrath_mage_mystic_flare:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],slark_essence_shift:[{label:"Attacks",controltype:"input"},{attributename:"agi_gain",label:"Total Damage",controltype:"text",display:"ability",fn:function(c,b){return c*b},returnproperty:"bonusagility"},{attributename:"stat_loss",label:"Total Damage",controltype:"text",fn:function(c,b){return -c*b},returnproperty:"bonusallstatsreduction"}],sniper_shrapnel:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}},{attributename:"building_damage",label:"BUILDING DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"slow_movement_speed",label:"Enemy Movement Speed Slow",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"}],spectre_dispersion:[{label:"Damage Taken",controltype:"input"},{attributename:"damage_reflection_pct",label:"DAMAGE REFLECTED:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b/100}}],storm_spirit_ball_lightning:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],templar_assassin_trap:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],shredder_reactive_armor:[{label:"Stacks",controltype:"input"},{attributename:"bonus_armor",label:"Total Armor Bonus",controltype:"text",nolevel:true,fn:function(c,b){return c*b},returnproperty:"armor"},{attributename:"bonus_hp_regen",label:"Total HP Regen Bonus",controltype:"text",nolevel:true,fn:function(c,b){return c*b},returnproperty:"healthregen"}],shredder_chakram:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],spirit_breaker_greater_bash:[{label:"Bash Proc",controltype:"checkbox"},{attributename:"damage",label:"%MOVESPEED AS DAMAGE",controltype:"text",fn:function(c,b){if(c){return b}else{return 0}},returnproperty:"bashbonusdamage"},{attributename:"bonus_movespeed_pct",label:"Total Damage",controltype:"text",fn:function(c,b){if(c){return b}else{return 0}},returnproperty:"movementspeedpct"},{attributename:"chance_pct",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"bash"}],tinker_march_of_the_machines:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],treant_leech_seed:[{label:"Pulses",controltype:"input"},{attributename:"leech_damage",label:"DAMAGE/HEAL:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}},{attributename:"movement_slow",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"}],troll_warlord_fervor:[{label:"Stacks",controltype:"input"},{attributename:"attack_speed",label:"ATTACK SPEED:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"attackspeed"}],undying_decay:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],undying_soul_rip:[{label:"Units",controltype:"input"},{attributename:"damage_per_unit",label:"DAMAGE/HEAL:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b}}],ursa_fury_swipes:[{label:"Stacks",controltype:"input"},{attributename:"damage_per_stack",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b},returnproperty:"bonusdamage"}],ursa_enrage:[{label:"Current HP",controltype:"input"},{attributename:"life_damage_bonus_percent",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b/100},returnproperty:"bonusdamage"}],venomancer_venomous_gale:[{label:"Duration",controltype:"input"},{attributename:"tick_damage",label:"Total Damage",controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityAttributeValue(e.ability().abilities()[d].attributes(),"strike_damage",e.ability().abilities()[d].level())+Math.floor(c/3)*b}},{attributename:"movement_slow",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"}],venomancer_poison_sting:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"movement_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"}],venomancer_plague_ward:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],venomancer_poison_nova:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],viper_poison_attack:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"bonus_movement_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"},{attributename:"bonus_attack_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"attackspeedreduction"}],viper_corrosive_skin:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"bonus_movement_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"},{attributename:"bonus_attack_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"attackspeedreduction"},{attributename:"bonus_magic_resistance",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"magicresist"}],viper_viper_strike:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}},{attributename:"bonus_movement_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"movementspeedpctreduction"},{attributename:"bonus_attack_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"attackspeedreduction"}],visage_soul_assumption:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],visage_gravekeepers_cloak:[{label:"Layers",controltype:"input"},{attributename:"bonus_armor",label:"ARMOR:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"armor"},{attributename:"bonus_resist",label:"%RESIST:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b},returnproperty:"magicresist"}],warlock_shadow_word:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],warlock_upheaval:[{label:"Duration",controltype:"input"},{attributename:"slow_rate",label:"DAMAGE:",controltype:"text",fn:function(c,b){return -c*b},returnproperty:"movementspeedpctreduction"}],weaver_the_swarm:[{label:"Attacks",controltype:"input"},{attributename:"damage",label:"DAMAGE:",controltype:"text",fn:function(c,b){return c*b}},{attributename:"armor_reduction",label:"DAMAGE:",controltype:"text",fn:function(c,b){return -c*b},returnproperty:"armorreduction"}],windrunner_powershot:[{label:"Duration",controltype:"input"},{label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return e.ability().getAbilityPropertyValue(e.ability().abilities()[d],"damage")*c}}],wisp_spirits:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],wisp_overcharge:[{label:"Current HP",controltype:"input"},{attributename:"drain_pct",label:"%HP DRAIN:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return c*b}},{label:"Current MP",controltype:"input"},{attributename:"drain_pct",label:"%MP DRAIN:",ignoretooltip:true,controltype:"text",fn:function(c,b,e,d){return c*b}},{attributename:"bonus_attack_speed",label:"Total Damage",controltype:"text",fn:function(c,b){return b},returnproperty:"attackspeed"}],witch_doctor_paralyzing_cask:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],witch_doctor_voodoo_restoration:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],witch_doctor_maledict:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],witch_doctor_death_ward:[{label:"Duration",controltype:"input"},{attributename:"damage",label:"Total Damage",controltype:"text",fn:function(c,b){return c*b}}],zuus_static_field:[{label:"Enemy HP",controltype:"input"},{attributename:"damage_health_pct",label:"DAMAGE:",ignoretooltip:true,controltype:"text",fn:function(c,b){return c*b/100}}]};return a}(HEROCALCULATOR);var HEROCALCULATOR=function(a){a.AbilityModel=function(b){var c=this;c.abilityData=a.abilityData;c.hasScepter=ko.observable(false);c.abilities=b;for(var d=0;d<c.abilities().length;d++){c.abilities()[d].isactive=ko.observable(false);c.abilities()[d].isdetail=ko.observable(false);c.abilities()[d].basedamage=ko.observable(0);c.abilities()[d].bash=ko.observable(0);c.abilities()[d].bashbonusdamage=ko.observable(0);c.abilities()[d].bonusdamage=ko.observable(0);c.abilities()[d].bonusdamageorb=ko.observable(0);c.abilities()[d].bonusdamagepct=ko.observable(0);c.abilities()[d].bonusdamageprecisionaura=ko.observable(0);c.abilities()[d].bonusdamagereduction=ko.observable(0);c.abilities()[d].bonushealth=ko.observable(0);c.abilities()[d].bonusstrength=ko.observable(0);c.abilities()[d].bonusstrength2=ko.observable(0);c.abilities()[d].bonusagility=ko.observable(0);c.abilities()[d].bonusagility2=ko.observable(0);c.abilities()[d].bonusint=ko.observable(0);c.abilities()[d].bonusallstatsreduction=ko.observable(0);c.abilities()[d].evasion=ko.observable(0);c.abilities()[d].magicresist=ko.observable(0);c.abilities()[d].manaregen=ko.observable(0);c.abilities()[d].manaregenreduction=ko.observable(0);c.abilities()[d].misschance=ko.observable(0);c.abilities()[d].movementspeedflat=ko.observable(0);c.abilities()[d].movementspeedpct=ko.observable(0);c.abilities()[d].movementspeedpctreduction=ko.observable(0);c.abilities()[d].turnratereduction=ko.observable(0);c.abilities()[d].attackrange=ko.observable(0);c.abilities()[d].attackspeed=ko.observable(0);c.abilities()[d].attackspeedreduction=ko.observable(0);c.abilities()[d].armor=ko.observable(0);c.abilities()[d].armorreduction=ko.observable(0);c.abilities()[d].healthregen=ko.observable(0);c.abilities()[d].lifesteal=ko.observable(0);c.abilities()[d].visionnight=ko.observable(0);c.abilities()[d].visionday=ko.observable(0)}c.abilityControlData={};c.abilitySettingsData=function(g,f,e){if(c.abilityControlData[g]==undefined){return c.processAbility(g,f,e,c.abilityData[g])}else{return c.abilityControlData[g]}};c.processAbility=function(f,q,o,p){var u={};u.data=[];var s;var n=[];for(var k=0;k<p.length;k++){switch(p[k].controltype){case"input":s=ko.observable(0);n.push(s);u.data.push({labelname:p[k].label.toUpperCase()+":",controlval:s,controltype:p[k].controltype,display:p[k].display});break;case"checkbox":s=ko.observable(false);n.push(s);u.data.push({labelname:p[k].label.toUpperCase()+"?",controlval:s,controltype:p[k].controltype,display:p[k].display});break;case"text":if(p[k].controls==undefined){if(p[k].nolevel){var m=function(g){return{fn:ko.computed(function(){return c.getAbilityAttributeValue(c.abilities()[o].attributes(),g,0)})}}}else{var m=function(g){return{fn:ko.computed(function(){return c.getAbilityAttributeValue(c.abilities()[o].attributes(),g,c.abilities()[o].level())})}}}var l=m(p[k].attributename);var e=c.getComputedFunction(s,l.fn,p[k].fn,q,o,c,p[k].returnproperty);var t=c.getAbilityAttributeTooltip(c.abilities()[o].attributes(),p[k].attributename);if(t==""||p[k].ignoretooltip){t=p[k].label}u.data.push({labelname:t,controlval:e,controltype:p[k].controltype,display:p[k].display,clean:l.fn})}else{if(p[k].nolevel){var m=function(g){return{fn:ko.computed(function(){return c.getAbilityAttributeValue(c.abilities()[o].attributes(),g,0)})}}}else{var m=function(g){return{fn:ko.computed(function(){return c.getAbilityAttributeValue(c.abilities()[o].attributes(),g,c.abilities()[o].level())})}}}var l=m(p[k].attributename);var e=c.getComputedFunction(n,l.fn,p[k].fn,q,o,c,p[k].returnproperty,p[k].controls);var t=c.getAbilityAttributeTooltip(c.abilities()[o].attributes(),p[k].attributename);if(t==""||p[k].ignoretooltip){t=p[k].label}u.data.push({labelname:t,controlval:e,controltype:p[k].controltype,display:p[k].display,clean:l.fn})}break}}c.abilityControlData[f]=u;return u};c.getComputedFunction=function(f,o,l,k,g,m,n,e){return ko.computed(function(){if(e==undefined){if(typeof f()=="boolean"){var q=l(f(),o(),k,g,m)}else{var q=l(parseFloat(f()),o(),k,g,m)}if(n!=undefined){c.abilities()[g][n](q)}return q}else{var r=[];for(var p=0;p<e.length;p++){if(typeof f[e[p]]()=="boolean"){r.push(f[e[p]]())}else{r.push(parseFloat(f[e[p]]()))}}var q=l(r,o(),k,g,m);if(n!=undefined){c.abilities()[g][n](q)}return q}})};c.getAbilityAttributeValue=function(e,g,k){for(var f=0;f<e.length;f++){if(e[f].name()==g){if(k==0){return parseFloat(e[f].value()[0])}else{if(k>e[f].value().length){return parseFloat(e[f].value()[0])}else{return parseFloat(e[f].value()[k-1])}}}}};c.getAbilityAttributeTooltip=function(e,g){for(var f=0;f<e.length;f++){if(e[f].name()==g){return e[f].tooltip()}}return""};c.getAbilityLevelByAbilityName=function(f){for(var e=0;e<c.abilities().length;e++){if(c.abilities()[e].name()==f){return c.abilities()[e].level()}}return -1};c.getAbilityByName=function(f){for(var e=0;e<c.abilities().length;e++){if(c.abilities()[e].name()==f){return c.abilities()[e]}}return undefined};c.getAbilityPropertyValue=function(f,e){return parseFloat(f[e]()[f.level()-1])};c.getAttributeBonusLevel=function(){for(var e=0;e<c.abilities().length;e++){if(c.abilities()[e].name()=="attribute_bonus"){return c.abilities()[e].level()}}return 0};c.getAllStatsReduction=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e]}}}else{if(k.bonusallstatsreduction!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.bonusallstatsreduction()}}}}return l});c.getAgility=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"marksmanship_agility_bonus":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break}}}}else{if(k.bonusagility!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.bonusagility()}}if(k.bonusagility2!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.bonusagility2()}}}}return l});c.getIntelligence=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){}}}}else{if(k.bonusint!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.bonusint()}}}}return l});c.getArmor=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"bonus_armor":if(k.name()!="templar_assassin_meld"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"warcry_armor":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break;case"armor_bonus":if(k.name()=="lich_frost_armor"||k.name()=="ogre_magi_frost_armor"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break}}}}else{if(k.armor!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.armor()}}}}return l});c.getArmorBaseReduction=ko.computed(function(){var g=1;for(var e=0;e<c.abilities().length;e++){var f=c.abilities()[e];if(!(f.name() in c.abilityData)){if(f.level()>0&&(f.isactive()||f.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){switch(f.name()){case"elder_titan_natural_order":g*=1-c.getAbilityAttributeValue(c.abilities()[e].attributes(),"armor_reduction_pct",f.level())/100;break}}}}return g});c.getArmorReduction=ko.computed(function(){var g=0;for(var e=0;e<c.abilities().length;e++){var f=c.abilities()[e];if(!(f.name() in c.abilityData)){if(f.level()>0&&(f.isactive()||f.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){switch(f.name()){case"templar_assassin_meld":g+=c.getAbilityAttributeValue(c.abilities()[e].attributes(),"bonus_armor",f.level());break;case"tidehunter_gush":g+=c.getAbilityAttributeValue(c.abilities()[e].attributes(),"armor_bonus",f.level());break;case"naga_siren_rip_tide":case"slardar_amplify_damage":case"vengefulspirit_wave_of_terror":g+=c.getAbilityAttributeValue(c.abilities()[e].attributes(),"armor_reduction",f.level());break;case"nevermore_dark_lord":g+=c.getAbilityAttributeValue(c.abilities()[e].attributes(),"presence_armor_reduction",f.level());break}}}else{if(f.armorreduction!=undefined){if(f.level()>0&&(f.isactive()||f.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){g+=f.armorreduction()}}}}return g});c.getHealth=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"bonus_hp":l+=parseInt(g.value()[k.level()-1]);break;case"true_form_hp_bonus":if(c.isTrueFormActive()){l+=parseInt(g.value()[k.level()-1])}break}}}}}return l});c.isTrueFormActive=function(){for(var e=0;e<c.abilities().length;e++){var f=c.abilities()[e];if(f.isactive()&&f.name()=="lone_druid_true_form"){return true}}return false};c.getHealthRegen=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"bonus_health_regen":case"heath_regen":case"health_regen":l+=parseInt(g.value()[k.level()-1]);break;case"hp_regen":l+=parseInt(g.value()[k.level()-1]);break}}}}else{if(k.healthregen!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.healthregen()}}}}return l});c.getManaRegen=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"bonus_mana_regen":l+=parseInt(g.value()[k.level()-1]);break}}}}else{if(k.manaregen!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.manaregen()}}}}return l});c.getManaRegenArcaneAura=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"mana_regen":if(k.name()=="crystal_maiden_brilliance_aura"){l+=parseFloat(g.value()[k.level()-1])}break}}}}}return l});c.getManaRegenReduction=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e]}}}else{if(k.manaregenreduction!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.manaregenreduction()}}}}return l});c.getAttackRange=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"bonus_attack_range":case"bonus_range":if(k.name()=="terrorblade_metamorphosis"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}if(k.name()=="troll_warlord_berserkers_rage"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"bonus_range_scepter":if(k.name()=="tiny_grow"&&c.hasScepter()){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"bonus_attack_range_scepter":if(k.name()=="enchantress_impetus"&&c.hasScepter()){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break}}if(k.name()=="lone_druid_true_form"){l-=422}}}else{if(k.attackrange!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.attackrange()}}}}return l});c.getAttackSpeed=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"attack_speed":case"attack_speed_bonus_pct":case"attackspeed_bonus":case"leap_speedbonus_as":case"attack_speed_bonus":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break;case"speed_bonus":if(k.name()=="axe_culling_blade"||k.name()=="necronomicon_archer_aoe"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"attack_speed_pct":if(k.name()=="ancient_apparition_chilling_touch"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"bonus_attack_speed":if(k.name()=="beastmaster_inner_beast"||k.name()=="lycan_feral_impulse"||k.name()=="lone_druid_rabid"||k.name()=="tiny_grow"||k.name()=="phantom_assassin_phantom_strike"||k.name()=="windrunner_focusfire"||k.name()=="ogre_magi_bloodlust"||k.name()=="centaur_khan_endurance_aura"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break}}}}else{if(k.attackspeed!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.attackspeed()}}}}return l});c.getAttackSpeedReduction=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"attackspeed_slow":case"slow_attack_speed":case"slow_attack_speed_pct":case"overload_attack_slow":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break;case"speed_bonus":if(k.name()=="omniknight_degen_aura"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"attack_slow":if(k.name()=="crystal_maiden_freezing_field"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}else{if(k.name()=="tusk_frozen_sigil"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}}break;case"attack_speed_pct":if(k.name()=="faceless_void_time_walk"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"bonus_attackspeed":if(k.name()=="bounty_hunter_jinada"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"attack_speed_slow":if(k.name()=="brewmaster_thunder_clap"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"slow":if(k.name()=="medusa_stone_gaze"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"attackspeed_bonus":l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break}}if(k.name()=="enraged_wildkin_tornado"){l-=15}}}else{if(k.attackspeedreduction!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.attackspeedreduction()}}}}return l});c.getBash=ko.computed(function(){var l=1;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"chance":case"proc_chance":l*=1-c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break}}}}else{if(k.bash!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l*=1-k.bash()/100}}}}return l});c.getBaseDamage=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){}}}}}return l});c.getBAT=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"base_attack_time":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break}}}}}return l});c.getBonusDamage=ko.computed(function(){var m=0;var f={};for(var g=0;g<c.abilities().length;g++){var l=c.abilities()[g];if(!(l.name() in c.abilityData)){if(l.level()>0&&(l.isactive()||l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[g].attributes().length;e++){var k=c.abilities()[g].attributes()[e];switch(k.name()){case"bonus_damage":if(l.name()=="broodmother_insatiable_hunger"||l.name()=="luna_lunar_blessing"||l.name()=="templar_assassin_refraction"||l.name()=="templar_assassin_meld"||l.name()=="tiny_grow"||l.name()=="terrorblade_metamorphosis"||l.name()=="troll_warlord_berserkers_rage"){m+=c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),l.level());f[l.name()]={damage:c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),l.level()),damagetype:"physical",displayname:l.displayname()}}break;case"hero_bonus_damage":m+=c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),l.level());f[l.name()]={damage:c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),l.level()),damagetype:"physical",displayname:l.displayname()};break}}if(l.name()=="storm_spirit_overload"){m+=c.getAbilityPropertyValue(l,"damage");f[l.name()]={damage:c.getAbilityPropertyValue(l,"damage"),damagetype:"magic",displayname:l.displayname()}}}}else{if(l.bonusdamage!=undefined&&l.bonusdamage()!=0){if(l.level()>0&&(l.isactive()||l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){m+=l.bonusdamage();f[l.name()]={damage:l.bonusdamage(),damagetype:"physical",displayname:l.displayname()}}}}}return{sources:f,total:m}});c.getBonusDamagePercent=ko.computed(function(){var m=0;var f={};for(var g=0;g<c.abilities().length;g++){var l=c.abilities()[g];if(!(l.name() in c.abilityData)){if(l.level()>0&&(l.isactive()||l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[g].attributes().length;e++){var k=c.abilities()[g].attributes()[e];switch(k.name()){case"bonus_damage_pct":if(l.name()=="magnataur_empower"||l.name()=="vengefulspirit_command_aura"||l.name()=="alpha_wolf_command_aura"){m+=c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),l.level())/100;f[l.name()]={damage:c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),l.level())/100,damagetype:"physical",displayname:l.displayname()}}break;case"gods_strength_damage":if(l.name()=="sven_gods_strength"){m+=c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),l.level())/100;f[l.name()]={damage:c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),l.level())/100,damagetype:"physical",displayname:l.displayname()}}break}}}}else{if(l.bonusdamagepct!=undefined&&l.bonusdamagepct()!=0){if(l.level()>0&&(l.isactive()||l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){m+=l.bonusdamagepct()/100;f[l.name()]={damage:l.bonusdamagepct()/100,damagetype:"physical",displayname:l.displayname()}}}}}return{sources:f,total:m}});c.getBonusDamagePrecisionAura=ko.computed(function(){var m=0;var l=0;var f=[];for(var g=0;g<c.abilities().length;g++){var n=c.abilities()[g];if(n.name()=="drow_ranger_trueshot"){if(n.level()>0&&(n.isactive()||n.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[g].attributes().length;e++){var k=c.abilities()[g].attributes()[e];switch(k.name()){case"trueshot_ranged_damage":m+=c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),n.level())/100;f.push({damage:c.getAbilityAttributeValue(c.abilities()[g].attributes(),k.name(),n.level())/100,damagetype:"physical",displayname:n.displayname()});break}}if(n.bonusdamageprecisionaura!=undefined){l+=n.bonusdamageprecisionaura();f.push({damage:n.bonusdamageprecisionaura(),damagetype:"physical",displayname:n.displayname()})}}}}return{sources:f,total:[m,l]}});c.getBonusDamageReduction=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"enfeeble_attack_reduction":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break}}}}else{if(k.bonusdamagereduction!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.bonusdamagereduction()}}}}return l});c.getStrength=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e]}}}else{if(k.bonusstrength!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.bonusstrength()}}if(k.bonusstrength2!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.bonusstrength2()}}}}return l});c.getCritSource=ko.computed(function(){var e={};for(var f=0;f<c.abilities().length;f++){var g=c.abilities()[f];if(!(g.name() in c.abilityData)){if(g.level()>0&&(g.isactive()||g.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){switch(g.name()){case"phantom_assassin_coup_de_grace":if(e[g.name()]==undefined){e[g.name()]={chance:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_chance",g.level())/100,multiplier:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_bonus",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break;case"brewmaster_drunken_brawler":if(e[g.name()]==undefined){e[g.name()]={chance:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_chance",g.level())/100,multiplier:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_multiplier",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break;case"chaos_knight_chaos_strike":case"lycan_shapeshift":if(e[g.name()]==undefined){e[g.name()]={chance:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_chance",g.level())/100,multiplier:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_damage",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break;case"skeleton_king_mortal_strike":if(e[g.name()]==undefined){e[g.name()]={chance:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_chance",g.level())/100,multiplier:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_mult",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break;case"juggernaut_blade_dance":if(e[g.name()]==undefined){e[g.name()]={chance:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"blade_dance_crit_chance",g.level())/100,multiplier:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"blade_dance_crit_mult",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break;case"alpha_wolf_critical_strike":case"giant_wolf_critical_strike":if(e[g.name()]==undefined){e[g.name()]={chance:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_chance",g.level())/100,multiplier:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"crit_mult",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break}}}}return e});c.getCleaveSource=ko.computed(function(){var e={};for(var f=0;f<c.abilities().length;f++){var g=c.abilities()[f];if(!(g.name() in c.abilityData)){if(g.level()>0&&(g.isactive()||g.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){switch(g.name()){case"magnataur_empower":if(e[g.name()]==undefined){e[g.name()]={radius:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"cleave_radius",g.level()),magnitude:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"cleave_damage_pct",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break;case"sven_great_cleave":if(e[g.name()]==undefined){e[g.name()]={radius:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"great_cleave_radius",g.level()),magnitude:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"great_cleave_damage",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break;case"kunkka_tidebringer":if(e[g.name()]==undefined){e[g.name()]={radius:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"radius",g.level()),magnitude:1,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}break;case"tiny_grow":if(c.hasScepter()){if(e[g.name()]==undefined){e[g.name()]={radius:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"bonus_cleave_radius_scepter",g.level()),magnitude:c.getAbilityAttributeValue(c.abilities()[f].attributes(),"bonus_cleave_damage_scepter",g.level())/100,count:1,displayname:g.displayname()}}else{e[g.name()].count+=1}}break}}}}return e});c.getCritChance=ko.computed(function(){var l=1;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"crit_chance":l*=1-c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break}}}}}return l});c.getEvasion=ko.computed(function(){var l=1;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"bonus_evasion":case"dodge_chance":l*=1-c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break;case"dodge_chance_pct":l*=1-c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break}}}}}return l});c.getMissChance=ko.computed(function(){var l=1;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"miss_chance":case"miss_rate":l*=1-c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break}}}}else{if(k.misschance!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l*=1-k.misschance()/100}}}}return l});c.getLifesteal=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"vampiric_aura":case"lifesteal_pct":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break}}}}else{if(k.lifesteal!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.lifesteal()}}}}return l});c.getMagicResist=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"spell_shield_resistance":return c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break;case"magic_resistance_pct":if(k.name()=="phantom_lancer_phantom_edge"){return c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"magic_damage_reduction_pct":if(k.name()=="rubick_null_field"){return c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break}}}}else{if(k.magicresist!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.magicresist()}}}}return l});c.getMagicResistReduction=ko.computed(function(){var l=1;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"spell_resist_pct":case"bonus_spell_damage_pct":case"resist_debuff":l*=1-c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break;case"magic_resistance_pct":l*=1+c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break}}}}}return l});c.getMovementSpeedFlat=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"bonus_movespeed":if(k.name()=="alchemist_chemical_rage"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"bonus_movement_speed":if(k.name()=="tiny_grow"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"bonus_move_speed":if(k.name()=="troll_warlord_berserkers_rage"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())}break;case"speed_loss":l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break}}}}else{if(k.movementspeedflat!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.movementspeedflat()}}}}return l});c.getMovementSpeedPercent=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"move_speed_pct":case"bonus_move_speed_pct":case"leap_speedbonus":case"warcry_movespeed":case"move_speed_bonus_pct":case"movespeed_bonus_pct":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break;case"bonus_movespeed":if(k.name()=="broodmother_spin_web"||k.name()=="spectre_spectral_dagger"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"speed_bonus":if(k.name()=="axe_culling_blade"||k.name()=="necronomicon_archer_aoe"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"movement_speed":if(k.name()=="nyx_assassin_vendetta"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"bonus_movespeed_pct":if(k.name()=="spirit_breaker_empowering_haste"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"bonus_movement_speed":if(k.name()=="ogre_magi_bloodlust"||k.name()=="slark_shadow_dance"||k.name()=="death_prophet_witchcraft"||k.name()=="kobold_taskmaster_speed_aura"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"movement_speed_pct":if(k.name()=="razor_unstable_current"||k.name()=="phantom_lancer_doppelwalk"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"bonus_move_speed":if(k.name()=="treant_natures_guise"||k.name()=="lone_druid_rabid"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"movespeed":if(k.name()=="wisp_tether"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"movespeed_bonus":if(k.name()=="kunkka_ghostship"||k.name()=="visage_grave_chill"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break}}}}else{if(k.movementspeedpct!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.movementspeedpct()/100}}}}return l});c.getMovementSpeedPercentReduction=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"slow_pct":l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break;case"movespeed_slow":case"slow_movement_speed":case"slow_movement_speed_pct":case"frost_arrows_movement_speed":case"blast_slow":case"crush_extra_slow":case"overload_move_slow":case"enemy_movespeed_bonus_pct":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break;case"move_slow":if(k.name()=="phantom_assassin_stifling_dagger"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}else{if(k.name()=="tusk_frozen_sigil"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}}break;case"slow":if(k.name()=="medusa_stone_gaze"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}else{l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"bonus_movespeed":if(k.name()=="broodmother_incapacitating_bite"||k.name()=="bounty_hunter_jinada"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}else{if(k.name()=="spectre_spectral_dagger"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}}break;case"speed_bonus":if(k.name()=="omniknight_degen_aura"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"movement_speed":if(k.name()=="tidehunter_gush"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"bonus_movement_speed":if(k.name()=="pugna_decrepify"||k.name()=="chen_penitence"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"movement_speed_pct":if(k.name()=="ancient_apparition_ice_vortex"||k.name()=="phantom_lancer_spirit_lance"||k.name()=="faceless_void_time_walk"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}else{if(k.name()=="skywrath_mage_concussive_shot"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}}break;case"slow_amount":if(k.name()=="razor_unstable_current"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"movement_slow":if(k.name()=="brewmaster_drunken_haze"||k.name()=="brewmaster_thunder_clap"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}else{if(k.name()=="ursa_earthshock"||k.name()=="treant_leech_seed"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}}break;case"movespeed":if(k.name()=="skeleton_king_reincarnation"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break;case"movespeed_bonus":if(k.name()=="kunkka_torrent"){l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}else{if(k.name()=="visage_grave_chill"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}}break}}if(k.name()=="satyr_trickster_purge"){l-=80/100}else{if(k.name()=="enraged_wildkin_tornado"){l-=15/100}}}}else{if(k.movementspeedpctreduction!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.movementspeedpctreduction()/100}}}}return l});c.getTurnRateReduction=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"slow":if(k.name()=="medusa_stone_gaze"){l-=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100}break}}}}else{if(k.turnratereduction!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.turnratereduction()/100}}}}return l});c.getVisionRangeNight=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"bonus_night_vision":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level());break}}}}else{if(k.visionnight!=undefined){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){l+=k.visionnight()}}}}return l});c.getVisionRangePctReduction=ko.computed(function(){var l=0;for(var f=0;f<c.abilities().length;f++){var k=c.abilities()[f];if(!(k.name() in c.abilityData)){if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[f].attributes().length;e++){var g=c.abilities()[f].attributes()[e];switch(g.name()){case"blind_percentage":l+=c.getAbilityAttributeValue(c.abilities()[f].attributes(),g.name(),k.level())/100;break}}}}}return l});c.setEvasion=ko.computed(function(){var g=0;for(var e=0;e<c.abilities().length;e++){var f=c.abilities()[e];if(f.level()>0&&(f.isactive()||f.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){if(f.name()=="windrunner_windrun"){return 1}}}return g});c.setMovementSpeed=ko.computed(function(){var f=522;var e=100;var l=0;for(var g=0;g<c.abilities().length;g++){var k=c.abilities()[g];if(k.level()>0&&(k.isactive()||k.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){if(k.name()=="spirit_breaker_charge_of_darkness"){return c.getAbilityAttributeValue(k.attributes(),"movement_speed",k.level())}if(k.name()=="dark_seer_surge"){return f}if(k.name()=="centaur_stampede"){return f}if(k.name()=="lion_voodoo"||k.name()=="shadow_shaman_voodoo"){return e}}}return l});c.getBashSource=function(e){var g={};for(var k=0;k<c.abilities().length;k++){var m=c.abilities()[k];if(!(m.name() in c.abilityData)){if(m.level()>0&&(m.isactive()||m.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var f=0;f<c.abilities()[k].attributes().length;f++){var l=c.abilities()[k].attributes()[f];switch(l.name()){case"proc_chance":if(g[m.name()]==undefined&&m.name()=="sniper_headshot"){g[m.name()]={chance:c.getAbilityAttributeValue(m.attributes(),l.name(),m.level())/100,damage:c.getAbilityPropertyValue(m,"damage"),count:1,damagetype:"physical",displayname:m.displayname()}}break;case"chance":if(g[m.name()]==undefined&&m.name()=="slardar_bash"){g[m.name()]={chance:c.getAbilityAttributeValue(m.attributes(),l.name(),m.level())/100,damage:c.getAbilityAttributeValue(m.attributes(),"bonus_damage",m.level()),count:1,damagetype:"physical",displayname:m.displayname()}}break}}}}else{if(m.bashbonusdamage!=undefined){if(m.level()>0&&(m.isactive()||m.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){if(g[m.name()]==undefined&&m.name()=="faceless_void_time_lock"){g[m.name()]={chance:m.bash()/100,damage:m.bashbonusdamage(),count:1,damagetype:"magic",displayname:m.displayname()}}if(g[m.name()]==undefined&&m.name()=="spirit_breaker_greater_bash"){g[m.name()]={chance:m.bash()/100,damage:m.bashbonusdamage()/100,count:1,damagetype:"magic",displayname:m.displayname()}}}}}}return g};c.getOrbSource=function(){var f={};for(var g=0;g<c.abilities().length;g++){var l=c.abilities()[g];if(!(l.name() in c.abilityData)){if(l.level()>0&&(l.isactive()||l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var e=0;e<c.abilities()[g].attributes().length;e++){var k=c.abilities()[g].attributes()[e];switch(k.name()){case"mana_per_hit":if(f[l.name()]==undefined&&l.name()=="antimage_mana_break"){f[l.name()]={damage:c.getAbilityAttributeValue(l.attributes(),k.name(),l.level())*c.getAbilityAttributeValue(l.attributes(),"damage_per_burn",l.level()),damagetype:"physical",displayname:l.displayname()}}break;case"damage_bonus":if(f[l.name()]==undefined&&l.name()=="clinkz_searing_arrows"){f[l.name()]={damage:c.getAbilityAttributeValue(l.attributes(),k.name(),l.level()),damagetype:"physical",displayname:l.displayname()}}break}}}}else{if(l.bonusdamageorb!=undefined){if(l.level()>0&&(l.isactive()||l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){if(f[l.name()]==undefined&&l.name()=="obsidian_destroyer_arcane_orb"){f[l.name()]={damage:l.bonusdamageorb(),damagetype:"pure",displayname:l.displayname()}}}}}}return f};c.toggleAbility=function(e,g,f){if(c.abilities()[e()].behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")<0){if(c.abilities()[e()].isactive()){c.abilities()[e()].isactive(false)}else{c.abilities()[e()].isactive(true)}}}.bind(this);c.toggleAbilityDetail=function(e,g,f){if(c.abilities()[e()].isdetail()){c.abilities()[e()].isdetail(false)}else{c.abilities()[e()].isdetail(true)}}.bind(this);c.getAbilityTooltipData=function(f,e){return a.getAbilityTooltipData(f,e)};c.levelUpAbility=function(e,k,g,f){if(c.abilities()[e()].level()<f.getAbilityLevelMax(k)&&f.availableSkillPoints()>0){switch(c.abilities()[e()].abilitytype()){case"DOTA_ABILITY_TYPE_ULTIMATE":if((c.abilities()[e()].level()+1)*5+1<=parseInt(f.selectedHeroLevel())){c.abilities()[e()].level(c.abilities()[e()].level()+1)}break;default:if(c.abilities()[e()].level()*2+1<=parseInt(f.selectedHeroLevel())){c.abilities()[e()].level(c.abilities()[e()].level()+1)}break}switch(c.abilities()[e()].name()){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":c.abilities()[e()+1].level(c.abilities()[e()].level());break;case"morphling_morph_str":c.abilities()[e()-1].level(c.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":c.abilities()[e()-1].level(c.abilities()[e()].level());c.abilities()[e()-2].level(c.abilities()[e()].level());case"nevermore_shadowraze1":c.abilities()[e()+1].level(c.abilities()[e()].level());c.abilities()[e()+2].level(c.abilities()[e()].level());break;case"nevermore_shadowraze2":c.abilities()[e()-1].level(c.abilities()[e()].level());c.abilities()[e()+1].level(c.abilities()[e()].level());break;case"nevermore_shadowraze3":c.abilities()[e()-1].level(c.abilities()[e()].level());c.abilities()[e()-2].level(c.abilities()[e()].level());break;case"ember_spirit_fire_remnant":c.abilities()[e()-1].level(c.abilities()[e()].level());break}}};c.levelDownAbility=function(e,k,g,f){if(c.abilities()[e()].level()>0){c.abilities()[e()].level(c.abilities()[e()].level()-1);switch(c.abilities()[e()].name()){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":c.abilities()[e()+1].level(c.abilities()[e()].level());break;case"morphling_morph_str":c.abilities()[e()-1].level(c.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":c.abilities()[e()-1].level(c.abilities()[e()].level());c.abilities()[e()-2].level(c.abilities()[e()].level());case"nevermore_shadowraze1":c.abilities()[e()+1].level(c.abilities()[e()].level());c.abilities()[e()+2].level(c.abilities()[e()].level());break;case"nevermore_shadowraze2":c.abilities()[e()-1].level(c.abilities()[e()].level());c.abilities()[e()+1].level(c.abilities()[e()].level());break;case"nevermore_shadowraze3":c.abilities()[e()-1].level(c.abilities()[e()].level());c.abilities()[e()-2].level(c.abilities()[e()].level());break;case"ember_spirit_fire_remnant":c.abilities()[e()-1].level(c.abilities()[e()].level());break}}}};return a}(HEROCALCULATOR);var HEROCALCULATOR=function(a){a.BuffOption=function(b,c){this.buffName=c;if(a.heroData["npc_dota_hero_"+b]==undefined){this.hero=b;this.abilityData=_.findWhere(a.unitData[b].abilities,{name:c});this.buffDisplayName=a.unitData[b].displayname+" - "+this.abilityData.displayname}else{this.hero="npc_dota_hero_"+b;this.abilityData=_.findWhere(a.heroData["npc_dota_hero_"+b].abilities,{name:c});this.buffDisplayName=a.heroData["npc_dota_hero_"+b].displayname+" - "+this.abilityData.displayname}};a.BuffViewModel=function(b){var c=new a.AbilityModel(ko.observableArray([]));c.availableBuffs=ko.observableArray([new a.BuffOption("abaddon","abaddon_frostmourne"),new a.BuffOption("axe","axe_culling_blade"),new a.BuffOption("beastmaster","beastmaster_inner_beast"),new a.BuffOption("bloodseeker","bloodseeker_bloodrage"),new a.BuffOption("bounty_hunter","bounty_hunter_track"),new a.BuffOption("centaur","centaur_stampede"),new a.BuffOption("crystal_maiden","crystal_maiden_brilliance_aura"),new a.BuffOption("dark_seer","dark_seer_surge"),new a.BuffOption("dazzle","dazzle_weave"),new a.BuffOption("drow_ranger","drow_ranger_trueshot"),new a.BuffOption("invoker","invoker_alacrity"),new a.BuffOption("wisp","wisp_tether"),new a.BuffOption("wisp","wisp_overcharge"),new a.BuffOption("kunkka","kunkka_ghostship"),new a.BuffOption("lich","lich_frost_armor"),new a.BuffOption("life_stealer","life_stealer_open_wounds"),new a.BuffOption("luna","luna_lunar_blessing"),new a.BuffOption("lycan","lycan_howl"),new a.BuffOption("magnataur","magnataur_empower"),new a.BuffOption("mirana","mirana_leap"),new a.BuffOption("ogre_magi","ogre_magi_bloodlust"),new a.BuffOption("omniknight","omniknight_guardian_angel"),new a.BuffOption("rubick","rubick_null_field"),new a.BuffOption("skeleton_king","skeleton_king_vampiric_aura"),new a.BuffOption("spirit_breaker","spirit_breaker_empowering_haste"),new a.BuffOption("sven","sven_warcry"),new a.BuffOption("treant","treant_living_armor"),new a.BuffOption("vengefulspirit","vengefulspirit_command_aura"),new a.BuffOption("npc_dota_neutral_alpha_wolf","alpha_wolf_critical_strike"),new a.BuffOption("npc_dota_neutral_alpha_wolf","alpha_wolf_command_aura"),new a.BuffOption("npc_dota_neutral_centaur_khan","centaur_khan_endurance_aura"),new a.BuffOption("npc_dota_neutral_giant_wolf","giant_wolf_critical_strike"),new a.BuffOption("npc_dota_neutral_kobold_taskmaster","kobold_taskmaster_speed_aura"),new a.BuffOption("npc_dota_neutral_ogre_magi","ogre_magi_frost_armor"),new a.BuffOption("npc_dota_neutral_satyr_hellcaller","satyr_hellcaller_unholy_aura"),new a.BuffOption("npc_dota_neutral_enraged_wildkin","enraged_wildkin_toughness_aura"),new a.BuffOption("npc_dota_necronomicon_archer_1","necronomicon_archer_aoe")]);c.availableDebuffs=ko.observableArray([new a.BuffOption("alchemist","alchemist_acid_spray"),new a.BuffOption("ancient_apparition","ancient_apparition_ice_vortex"),new a.BuffOption("axe","axe_battle_hunger"),new a.BuffOption("bane","bane_enfeeble"),new a.BuffOption("batrider","batrider_sticky_napalm"),new a.BuffOption("beastmaster","beastmaster_primal_roar"),new a.BuffOption("bounty_hunter","bounty_hunter_jinada"),new a.BuffOption("brewmaster","brewmaster_thunder_clap"),new a.BuffOption("brewmaster","brewmaster_drunken_haze"),new a.BuffOption("bristleback","bristleback_viscous_nasal_goo"),new a.BuffOption("broodmother","broodmother_incapacitating_bite"),new a.BuffOption("centaur","centaur_stampede"),new a.BuffOption("chen","chen_penitence"),new a.BuffOption("crystal_maiden","crystal_maiden_crystal_nova"),new a.BuffOption("crystal_maiden","crystal_maiden_freezing_field"),new a.BuffOption("dazzle","dazzle_weave"),new a.BuffOption("drow_ranger","drow_ranger_frost_arrows"),new a.BuffOption("earth_spirit","earth_spirit_rolling_boulder"),new a.BuffOption("elder_titan","elder_titan_natural_order"),new a.BuffOption("elder_titan","elder_titan_earth_splitter"),new a.BuffOption("enchantress","enchantress_untouchable"),new a.BuffOption("enchantress","enchantress_enchant"),new a.BuffOption("faceless_void","faceless_void_time_walk"),new a.BuffOption("huskar","huskar_life_break"),new a.BuffOption("invoker","invoker_ghost_walk"),new a.BuffOption("invoker","invoker_ice_wall"),new a.BuffOption("wisp","wisp_tether"),new a.BuffOption("jakiro","jakiro_dual_breath"),new a.BuffOption("jakiro","jakiro_liquid_fire"),new a.BuffOption("keeper_of_the_light","keeper_of_the_light_blinding_light"),new a.BuffOption("kunkka","kunkka_torrent"),new a.BuffOption("lich","lich_frost_nova"),new a.BuffOption("lich","lich_frost_armor"),new a.BuffOption("lich","lich_chain_frost"),new a.BuffOption("life_stealer","life_stealer_open_wounds"),new a.BuffOption("lion","lion_voodoo"),new a.BuffOption("magnataur","magnataur_skewer"),new a.BuffOption("medusa","medusa_stone_gaze"),new a.BuffOption("meepo","meepo_geostrike"),new a.BuffOption("naga_siren","naga_siren_rip_tide"),new a.BuffOption("night_stalker","night_stalker_void"),new a.BuffOption("night_stalker","night_stalker_crippling_fear"),new a.BuffOption("night_stalker","night_stalker_darkness"),new a.BuffOption("ogre_magi","ogre_magi_ignite"),new a.BuffOption("omniknight","omniknight_degen_aura"),new a.BuffOption("phantom_assassin","phantom_assassin_stifling_dagger"),new a.BuffOption("phantom_lancer","phantom_lancer_spirit_lance"),new a.BuffOption("pudge","pudge_rot"),new a.BuffOption("pugna","pugna_decrepify"),new a.BuffOption("queenofpain","queenofpain_shadow_strike"),new a.BuffOption("riki","riki_smoke_screen"),new a.BuffOption("rubick","rubick_fade_bolt"),new a.BuffOption("sand_king","sandking_epicenter"),new a.BuffOption("nevermore","nevermore_dark_lord"),new a.BuffOption("shadow_shaman","shadow_shaman_voodoo"),new a.BuffOption("skeleton_king","skeleton_king_hellfire_blast"),new a.BuffOption("skeleton_king","skeleton_king_reincarnation"),new a.BuffOption("skywrath_mage","skywrath_mage_concussive_shot"),new a.BuffOption("slardar","slardar_slithereen_crush"),new a.BuffOption("slardar","slardar_amplify_damage"),new a.BuffOption("slark","slark_essence_shift"),new a.BuffOption("sniper","sniper_shrapnel"),new a.BuffOption("spectre","spectre_spectral_dagger"),new a.BuffOption("storm_spirit","storm_spirit_overload"),new a.BuffOption("templar_assassin","templar_assassin_meld"),new a.BuffOption("tidehunter","tidehunter_gush"),new a.BuffOption("tinker","tinker_laser"),new a.BuffOption("treant","treant_leech_seed"),new a.BuffOption("tusk","tusk_frozen_sigil"),new a.BuffOption("ursa","ursa_earthshock"),new a.BuffOption("vengefulspirit","vengefulspirit_wave_of_terror"),new a.BuffOption("venomancer","venomancer_venomous_gale"),new a.BuffOption("venomancer","venomancer_poison_sting"),new a.BuffOption("viper","viper_poison_attack"),new a.BuffOption("viper","viper_corrosive_skin"),new a.BuffOption("viper","viper_viper_strike"),new a.BuffOption("visage","visage_grave_chill"),new a.BuffOption("warlock","warlock_upheaval"),new a.BuffOption("weaver","weaver_the_swarm"),new a.BuffOption("windrunner","windrunner_windrun"),new a.BuffOption("npc_dota_neutral_ghost","ghost_frost_attack"),new a.BuffOption("npc_dota_neutral_polar_furbolg_ursa_warrior","polar_furbolg_ursa_warrior_thunder_clap"),new a.BuffOption("npc_dota_neutral_ogre_magi","ogre_magi_frost_armor"),new a.BuffOption("npc_dota_neutral_satyr_trickster","satyr_trickster_purge"),new a.BuffOption("npc_dota_neutral_enraged_wildkin","enraged_wildkin_tornado")]);c.selectedBuff=ko.observable(c.availableBuffs()[0]);c.buffs=ko.observableArray([]);c.addBuff=function(f,e){if(_.findWhere(c.buffs(),{name:c.selectedBuff().buffName})==undefined){var d=ko.mapping.fromJS(c.selectedBuff().abilityData);d.isactive=ko.observable(false);d.isdetail=ko.observable(false);d.basedamage=ko.observable(0);d.bash=ko.observable(0);d.bashbonusdamage=ko.observable(0);d.bonusdamage=ko.observable(0);d.bonusdamageorb=ko.observable(0);d.bonusdamagepct=ko.observable(0);d.bonusdamageprecisionaura=ko.observable(0);d.bonusdamagereduction=ko.observable(0);d.bonushealth=ko.observable(0);d.bonusstrength=ko.observable(0);d.bonusstrength2=ko.observable(0);d.bonusagility=ko.observable(0);d.bonusagility2=ko.observable(0);d.bonusint=ko.observable(0);d.bonusallstatsreduction=ko.observable(0);d.evasion=ko.observable(0);d.magicresist=ko.observable(0);d.manaregen=ko.observable(0);d.manaregenreduction=ko.observable(0);d.misschance=ko.observable(0);d.movementspeedflat=ko.observable(0);d.movementspeedpct=ko.observable(0);d.movementspeedpctreduction=ko.observable(0);d.turnratereduction=ko.observable(0);d.attackrange=ko.observable(0);d.attackspeed=ko.observable(0);d.attackspeedreduction=ko.observable(0);d.armor=ko.observable(0);d.armorreduction=ko.observable(0);d.healthregen=ko.observable(0);d.lifesteal=ko.observable(0);d.visionnight=ko.observable(0);d.visionday=ko.observable(0);switch(d.name()){case"invoker_cold_snap":case"invoker_ghost_walk":case"invoker_tornado":case"invoker_emp":case"invoker_alacrity":case"invoker_chaos_meteor":case"invoker_sun_strike":case"invoker_forge_spirit":case"invoker_ice_wall":case"invoker_deafening_blast":d.level(1);break}c.abilities.push(d);c.buffs.push({name:c.selectedBuff().buffName,hero:c.selectedBuff().hero,data:d})}};c.removeBuff=function(g,f,e){if(_.findWhere(c.buffs(),{name:e})!=undefined){c.buffs.remove(_.findWhere(c.buffs(),{name:e}));if(c.abilityControlData[e]!=undefined){for(var d=0;d<c.abilityControlData[e].data.length;d++){if(c.abilityControlData[e].data[d].controlval.dispose!=undefined){c.abilityControlData[e].data[d].controlval.dispose();c.abilityControlData[e].data[d].clean.dispose()}}c.abilityControlData[e]=undefined}for(var d=0;d<c.abilities().length;d++){if(c.abilities()[d].name()==e){c.abilities()[d].level(0);c.abilities.remove(c.abilities()[d]);break}}}};c.toggleBuff=function(d,f,e){if(c.buffs()[d()].data.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")<0){if(c.buffs()[d()].data.isactive()){c.buffs()[d()].data.isactive(false);c.abilities()[d()].isactive(false)}else{c.buffs()[d()].data.isactive(true);c.abilities()[d()].isactive(true)}}}.bind(this);c.toggleBuffDetail=function(d,f,e){if(c.buffs()[d()].data.isdetail()){c.buffs()[d()].data.isdetail(false)}else{c.buffs()[d()].data.isdetail(true)}}.bind(this);c.levelUpAbility=function(d,g,f,e){if(c.abilities()[d()].level()<e.getAbilityLevelMax(g)){switch(c.abilities()[d()].abilitytype()){case"DOTA_ABILITY_TYPE_ULTIMATE":c.abilities()[d()].level(c.abilities()[d()].level()+1);break;default:c.abilities()[d()].level(c.abilities()[d()].level()+1);break}switch(c.abilities()[d()].name()){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":c.abilities()[d()+1].level(c.abilities()[d()].level());break;case"morphling_morph_str":c.abilities()[d()-1].level(c.abilities()[d()].level());break;case"keeper_of_the_light_spirit_form":c.abilities()[d()-1].level(c.abilities()[d()].level());c.abilities()[d()-2].level(c.abilities()[d()].level());case"nevermore_shadowraze1":c.abilities()[d()+1].level(c.abilities()[d()].level());c.abilities()[d()+2].level(c.abilities()[d()].level());break;case"nevermore_shadowraze2":c.abilities()[d()-1].level(c.abilities()[d()].level());c.abilities()[d()+1].level(c.abilities()[d()].level());break;case"nevermore_shadowraze3":c.abilities()[d()-1].level(c.abilities()[d()].level());c.abilities()[d()-2].level(c.abilities()[d()].level());break}}};return c};return a}(HEROCALCULATOR);var HEROCALCULATOR=function(a){a.DamageAmpViewModel=function(b){var c=new a.BuffViewModel(ko.observableArray([]));c.availableBuffs=ko.observableArray([new a.BuffOption("slardar","slardar_sprint"),new a.BuffOption("undying","undying_flesh_golem"),new a.BuffOption("chen","chen_penitence"),new a.BuffOption("medusa","medusa_stone_gaze"),new a.BuffOption("shadow_demon","shadow_demon_soul_catcher")]);c.availableDebuffs=ko.observableArray([new a.BuffOption("medusa","medusa_mana_shield"),new a.BuffOption("templar_assassin","templar_assassin_refraction"),new a.BuffOption("faceless_void","faceless_void_backtrack"),new a.BuffOption("nyx_assassin","nyx_assassin_spiked_carapace"),new a.BuffOption("spectre","spectre_dispersion"),new a.BuffOption("wisp","wisp_overcharge"),new a.BuffOption("bristleback","bristleback_bristleback"),new a.BuffOption("abaddon","abaddon_borrowed_time"),new a.BuffOption("abaddon","abaddon_aphotic_shield"),new a.BuffOption("kunkka","kunkka_ghostship"),new a.BuffOption("treant","treant_living_armor"),new a.BuffOption("dazzle","dazzle_shallow_grave")]);c.selectedBuff=ko.observable(c.availableBuffs()[0]);c.buffs=ko.observableArray([]);c.getAbilityDamageAmpValue=function(e,f){var d=_.findWhere(c.buffs(),{name:e});console.log(c);if(d==undefined){return 0}else{var g=d.data;console.log(g);return c.getAbilityAttributeValue(g.attributes(),f,g.level())}};c.getDamageMultiplierSources=ko.computed(function(){var d={};for(var e=0;e<c.abilities().length;e++){var f=c.abilities()[e];if(f.level()>0&&(f.isactive()||f.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){switch(f.name()){case"slardar_sprint":case"undying_flesh_golem":case"medusa_stone_gaze":case"chen_penitence":d[f.name()]={multiplier:c.getAbilityAttributeValue(f.attributes(),"bonus_damage_taken",f.level())/100,damagetype:"physical",displayname:f.displayname()};break;case"shadow_demon_soul_catcher":d[f.name()]={multiplier:c.getAbilityAttributeValue(f.attributes(),"bonus_damage_taken",f.level())/100,damagetype:"pure",displayname:f.displayname()};break;case"medusa_mana_shield":d[f.name()]={multiplier:-0.5,damagetype:"percentreduction",displayname:f.displayname()};break;case"spectre_dispersion":d[f.name()]={multiplier:-c.getAbilityAttributeValue(f.attributes(),"damage_reflection_pct",f.level())/100,damagetype:"percentreduction",displayname:f.displayname()};break;case"abaddon_aphotic_shield":d[f.name()]={multiplier:c.getAbilityAttributeValue(f.attributes(),"damage_absorb",f.level()),damagetype:"flatreduction",displayname:f.displayname()};break}}}return d});return c};return a}(HEROCALCULATOR);var HEROCALCULATOR=function(b){b.HeroOption=function(c,d){this.heroName=c;this.heroDisplayName=d};function a(){var c=[];for(h in b.heroData){c.push(new b.HeroOption(h.replace("npc_dota_hero_",""),b.heroData[h].displayname))}console.log(c);return c}b.HeroCalculatorModel=function(d){var c=this;c.availableHeroes=ko.observableArray(a());c.sectionDisplay=ko.observable({inventory:ko.observable(true),ability:ko.observable(true),buff:ko.observable(true),debuff:ko.observable(true),damageamp:ko.observable(false)});c.sectionDisplayToggle=function(e){console.log(e);c.sectionDisplay()[e](!c.sectionDisplay()[e]())};c.availableHeroes.sort(function(f,e){return f.heroDisplayName==e.heroDisplayName?0:f.heroDisplayName<e.heroDisplayName?-1:1});c.selectedHero=ko.observable(c.availableHeroes()[d]);c.selectedHeroLevel=ko.observable(1);c.inventory=new b.InventoryViewModel;c.buffs=new b.BuffViewModel;c.buffs.hasScepter=c.inventory.hasScepter;c.debuffs=new b.BuffViewModel;c.damageamplification=new b.DamageAmpViewModel;c.damagereduction=new b.DamageAmpViewModel;c.hero=ko.computed(function(){return ko.mapping.fromJS(b.heroData["npc_dota_hero_"+c.selectedHero().heroName])});c.enemy=ko.observable(c);c.unit=ko.observable(c);c.getAbilityLevelMax=function(e){if(e.abilitytype()=="DOTA_ABILITY_TYPE_ATTRIBUTES"){return 10}else{if(e.name()=="invoker_quas"||e.name()=="invoker_wex"||e.name()=="invoker_exort"){return 7}else{if(e.name()=="invoker_invoke"){return 4}else{if(e.name()=="earth_spirit_stone_caller"){return 1}else{if(e.abilitytype()=="DOTA_ABILITY_TYPE_ULTIMATE"||e.name()=="keeper_of_the_light_recall"||e.name()=="keeper_of_the_light_blinding_light"||e.name()=="ember_spirit_activate_fire_remnant"){return 3}else{if(e.name()=="puck_ethereal_jaunt"||e.name()=="shadow_demon_shadow_poison_release"||e.name()=="templar_assassin_trap"||e.name()=="spectre_reality"){return 0}else{if(e.name()=="invoker_cold_snap"||e.name()=="invoker_ghost_walk"||e.name()=="invoker_tornado"||e.name()=="invoker_emp"||e.name()=="invoker_alacrity"||e.name()=="invoker_chaos_meteor"||e.name()=="invoker_sun_strike"||e.name()=="invoker_forge_spirit"||e.name()=="invoker_ice_wall"||e.name()=="invoker_deafening_blast"){return 0}else{return 4}}}}}}}};c.ability=ko.computed(function(){var e=new b.AbilityModel(ko.mapping.fromJS(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].abilities));if(c.selectedHero().heroName=="earth_spirit"){e.abilities()[3].level(1)}if(c.selectedHero().heroName=="invoker"){for(var f=6;f<16;f++){e.abilities()[f].level(1)}}e.hasScepter=c.inventory.hasScepter;return e});c.showCriticalStrikeDetails=ko.observable(false);c.toggleCriticalStrikeDetails=function(){c.showCriticalStrikeDetails(!c.showCriticalStrikeDetails())};c.damageInputValue=ko.observable(0);c.showDamageDetails=ko.observable(false);c.toggleDamageDetails=function(){c.showDamageDetails(!c.showDamageDetails())};c.showStatDetails=ko.observable(false);c.toggleStatDetails=function(){c.showStatDetails(!c.showStatDetails())};c.availableSkillPoints=ko.computed(function(){var f=c.selectedHeroLevel();for(var e=0;e<c.ability().abilities().length;e++){switch(c.ability().abilities()[e].abilitytype()){case"DOTA_ABILITY_TYPE_ULTIMATE":if((c.ability().abilities()[e].level()+1)*5+1>parseInt(c.selectedHeroLevel())){c.ability().abilities()[e].level(Math.floor((parseInt(c.selectedHeroLevel())-1)/5))}break;default:if(c.ability().abilities()[e].level()*2+1>parseInt(c.selectedHeroLevel())){c.ability().abilities()[e].level(Math.floor((parseInt(c.selectedHeroLevel())+1)/2))}break}switch(c.ability().abilities()[e].name()){case"beastmaster_call_of_the_wild_boar":case"chen_test_of_faith_teleport":case"keeper_of_the_light_recall":case"keeper_of_the_light_blinding_light":case"morphling_morph_str":case"shadow_demon_shadow_poison_release":case"nevermore_shadowraze2":case"nevermore_shadowraze3":case"earth_spirit_stone_caller":case"ember_spirit_activate_fire_remnant":case"invoker_cold_snap":case"invoker_ghost_walk":case"invoker_tornado":case"invoker_emp":case"invoker_alacrity":case"invoker_chaos_meteor":case"invoker_sun_strike":case"invoker_forge_spirit":case"invoker_ice_wall":case"invoker_deafening_blast":break;default:f-=c.ability().abilities()[e].level();break}}if(f<0){for(var e=0;e<c.ability().abilities().length;e++){c.ability().abilities()[e].level(0)}f=c.selectedHeroLevel()}return f},this);c.primaryattribute=ko.computed(function(){var e=b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attributeprimary;if(e=="DOTA_ATTRIBUTE_AGILITY"){return"agi"}else{if(e=="DOTA_ATTRIBUTE_INTELLECT"){return"int"}else{if(e=="DOTA_ATTRIBUTE_STRENGTH"){return"str"}else{return""}}}});c.totalAttribute=function(e){if(e=="agi"){return parseFloat(c.totalagi())}if(e=="int"){return parseFloat(c.totalint())}if(e=="str"){return parseFloat(c.totalstr())}};c.totalagi=ko.computed(function(){return(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attributebaseagility+b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attributeagilitygain*(c.selectedHeroLevel()-1)+c.inventory.getAttributes("agi")+c.ability().getAttributeBonusLevel()*2+c.ability().getAgility()+c.enemy().ability().getAllStatsReduction()+c.debuffs.getAllStatsReduction()).toFixed(2)});c.totalint=ko.computed(function(){return(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attributebaseintelligence+b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attributeintelligencegain*(c.selectedHeroLevel()-1)+c.inventory.getAttributes("int")+c.ability().getAttributeBonusLevel()*2+c.ability().getIntelligence()+c.enemy().ability().getAllStatsReduction()+c.debuffs.getAllStatsReduction()).toFixed(2)});c.totalstr=ko.computed(function(){return(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attributebasestrength+b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attributestrengthgain*(c.selectedHeroLevel()-1)+c.inventory.getAttributes("str")+c.ability().getAttributeBonusLevel()*2+c.ability().getStrength()+c.enemy().ability().getAllStatsReduction()+c.debuffs.getAllStatsReduction()).toFixed(2)});c.health=ko.computed(function(){return(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].statushealth+c.totalstr()*19+c.inventory.getHealth()+c.ability().getHealth()).toFixed(2)});c.healthregen=ko.computed(function(){return(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].statushealthregen+c.totalstr()*0.03+c.inventory.getHealthRegen()+c.ability().getHealthRegen()+c.buffs.getHealthRegen()).toFixed(2)});c.mana=ko.computed(function(){return(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].statusmana+c.totalint()*13+c.inventory.getMana()).toFixed(2)});c.manaregen=ko.computed(function(){return((b.heroData["npc_dota_hero_"+c.selectedHero().heroName].statusmanaregen+c.totalint()*0.04+c.ability().getManaRegen())*(1+c.inventory.getManaRegenPercent())+(c.selectedHero().heroName=="crystal_maiden"?c.ability().getManaRegenArcaneAura()*2:c.buffs.getManaRegenArcaneAura())+c.inventory.getManaRegenBloodstone()-c.enemy().ability().getManaRegenReduction()).toFixed(2)});c.totalarmorphysical=ko.computed(function(){return(c.enemy().ability().getArmorBaseReduction()*c.debuffs.getArmorBaseReduction()*(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].armorphysical+c.totalagi()*0.14)+c.inventory.getArmor()+c.ability().getArmor()+c.enemy().ability().getArmorReduction()+c.buffs.getArmor()+c.debuffs.getArmorReduction()).toFixed(2)});c.totalarmorphysicalreduction=ko.observable();c.damagreduction=ko.observable();c.totalmovementspeed=ko.computed(function(){var e=c.ability().setMovementSpeed()>0?c.ability().setMovementSpeed():c.buffs.setMovementSpeed();if(e>0){return e}else{return((b.heroData["npc_dota_hero_"+c.selectedHero().heroName].movementspeed+c.inventory.getMovementSpeedFlat()+c.ability().getMovementSpeedFlat())*(1+c.inventory.getMovementSpeedPercent()+c.ability().getMovementSpeedPercent()+c.enemy().inventory.getMovementSpeedPercentReduction()+c.enemy().ability().getMovementSpeedPercentReduction()+c.buffs.getMovementSpeedPercent()+c.debuffs.getMovementSpeedPercentReduction()+c.unit().ability().getMovementSpeedPercent())).toFixed(2)}});c.totalturnrate=ko.computed(function(){return(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].movementturnrate*(1+c.enemy().ability().getTurnRateReduction()+c.debuffs.getTurnRateReduction())).toFixed(2)});c.basedamage=ko.computed(function(){return[Math.floor(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attackdamagemin+c.totalAttribute(c.primaryattribute())+c.ability().getBaseDamage()),Math.floor(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attackdamagemax+c.totalAttribute(c.primaryattribute())+c.ability().getBaseDamage())]});c.bonusdamage=ko.computed(function(){return c.inventory.getBonusDamage().total+c.ability().getBonusDamage().total+c.buffs.getBonusDamage().total+Math.floor((c.basedamage()[0]+c.basedamage()[1])/2*(c.inventory.getBonusDamagePercent().total+c.ability().getBonusDamagePercent().total+c.buffs.getBonusDamagePercent().total))+Math.floor(c.hero().attacktype()=="DOTA_UNIT_CAP_RANGED_ATTACK"?c.selectedHero().heroName=="drow_ranger"?c.ability().getBonusDamagePrecisionAura().total[0]*c.totalagi():c.buffs.getBonusDamagePrecisionAura().total[1]:0)});c.bonusdamagereduction=ko.computed(function(){return Math.abs(c.enemy().ability().getBonusDamageReduction()+c.debuffs.getBonusDamageReduction())});c.damage=ko.computed(function(){return[c.basedamage()[0]+c.bonusdamage()[0],c.basedamage()[1]+c.bonusdamage()[1]]});c.damageagainstenemy=ko.observable();c.totalmagicresistanceproduct=ko.computed(function(){return(1-b.heroData["npc_dota_hero_"+c.selectedHero().heroName].magicalresistance/100)*(1-c.inventory.getMagicResist()/100)*(1-c.ability().getMagicResist()/100)*(1-c.buffs.getMagicResist()/100)*c.enemy().inventory.getMagicResistReduction()*c.enemy().ability().getMagicResistReduction()*c.debuffs.getMagicResistReduction()});c.totalmagicresistance=ko.computed(function(){return 1-c.totalmagicresistanceproduct()});c.bat=ko.computed(function(){var e=c.ability().getBAT();if(e>0){return e}return b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attackrate});c.ias=ko.computed(function(){var e=parseFloat(c.totalagi())+c.inventory.getAttackSpeed()+c.ability().getAttackSpeed()+c.enemy().ability().getAttackSpeedReduction()+c.buffs.getAttackSpeed()+c.debuffs.getAttackSpeedReduction()+c.unit().ability().getAttackSpeed();if(e<-80){return -80}else{if(e>400){return 400}}return e.toFixed(2)});c.attacktime=ko.computed(function(){return(c.bat()/(1+c.ias()/100)).toFixed(2)});c.attackspersecond=ko.computed(function(){return(1+c.ias()/100)/c.bat()});c.evasion=ko.computed(function(){var f=c.ability().setEvasion();if(f){return(f*100).toFixed(2)+"%"}else{return((1-c.inventory.getEvasion()*c.ability().getEvasion())*100).toFixed(2)+"%"}});c.ehp_physical=ko.computed(function(){return(c.health()*(1+0.06*c.totalarmorphysical())/(1-(1-c.inventory.getEvasion()*c.ability().getEvasion()))).toFixed(2)});c.ehp_magical=ko.computed(function(){return(c.health()/c.totalmagicresistanceproduct()).toFixed(2)});c.bash=ko.computed(function(){var e=b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attacktype;return((1-c.inventory.getBash(e)*c.ability().getBash())*100).toFixed(2)+"%"});c.cleaveinfo=ko.computed(function(){var n=c.inventory.getCleaveSource();$.extend(n,c.ability().getCleaveSource());$.extend(n,c.buffs.getCleaveSource());var o=[];for(prop in n){var e=n[prop];e.name=prop;o.push(e)}function l(r,q){if(r.radius<q.radius){return 1}if(r.radius>q.radius){return -1}return 0}o.sort(l);var f={};for(var k=0;k<o.length;k++){var m=0;for(var g=0;g<o.length;g++){if(o[g].radius>=o[k].radius){m+=o[g].magnitude*o[g].count}}f[o[k].radius]=m}var p=[];for(prop in f){p.push({radius:prop,magnitude:f[prop]})}return p});c.critchance=ko.computed(function(){return((1-c.inventory.getCritChance()*c.ability().getCritChance())*100).toFixed(2)+"%"});c.critinfo=ko.computed(function(){var o=c.inventory.getCritSource();$.extend(o,c.ability().getCritSource());$.extend(o,c.buffs.getCritSource());var e=[];for(prop in o){var g=o[prop];g.name=prop;e.push(g)}function f(t,k){if(t.multiplier<k.multiplier){return 1}if(t.multiplier>k.multiplier){return -1}return 0}e.sort(f);var s=[];var q=0;for(var n=0;n<e.length;n++){var p=1;for(var m=0;m<n;m++){for(var l=0;l<e[m].count;l++){p*=1-e[m].chance}}var r=1;for(var l=0;l<e[n].count;l++){r*=1-e[n].chance}p*=1-r;q+=p;if(e[n].count>1){s.push({name:e[n].displayname+" x"+e[n].count,chance:e[n].chance,multiplier:e[n].multiplier,count:e[n].count,totalchance:p})}else{s.push({name:e[n].displayname,chance:e[n].chance,multiplier:e[n].multiplier,count:e[n].count,totalchance:p})}}return{sources:s,total:q}});c.bashinfo=ko.computed(function(){var p=b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attacktype;var f=c.inventory.getBashSource(p);$.extend(f,c.ability().getBashSource());var r=[];for(prop in f){var g=f[prop];g.name=prop;r.push(g)}function e(v,k){if(v.duration<k.duration){return 1}if(v.duration>k.duration){return -1}return 0}var u=[];var t=0;for(var n=0;n<r.length;n++){var q=1;for(var m=0;m<n;m++){for(var l=0;l<r[m].count;l++){q*=1-r[m].chance}}var s=1;for(var l=0;l<r[n].count;l++){s*=1-r[n].chance}q*=1-s;t+=q;if(r[n].name=="spirit_breaker_greater_bash"){var o=r[n].damage*c.totalmovementspeed()}else{var o=r[n].damage}if(r[n].count>1){u.push({name:r[n].displayname+" x"+r[n].count,chance:r[n].chance,damage:o,count:r[n].count,damagetype:r[n].damagetype,totalchance:q})}else{u.push({name:r[n].displayname,chance:r[n].chance,damage:o,count:r[n].count,damagetype:r[n].damagetype,totalchance:q})}}return{sources:u,total:t}});c.orbprocinfo=ko.computed(function(){var o=b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attacktype;var q=c.inventory.getOrbProcSource();var f=[];for(prop in q){var e=q[prop];e.name=prop;f.push(e)}function n(u,k){if(u.priority>k.priority){return 1}if(u.priority<k.priority){return -1}if(u.damage<k.damage){return 1}if(u.damage>k.damage){return -1}return 0}f.sort(n);var t=[];var r=0;for(var m=0;m<f.length;m++){var p=1;for(var l=0;l<m;l++){for(var g=0;g<f[l].count;g++){p*=1-f[l].chance}}var s=1;for(var g=0;g<f[m].count;g++){s*=1-f[m].chance}p*=1-s;r+=p;if(f[m].count>1){t.push({name:f[m].displayname+" x"+f[m].count,chance:f[m].chance,damage:f[m].damage,count:f[m].count,damagetype:f[m].damagetype,totalchance:p})}else{t.push({name:f[m].displayname,chance:f[m].chance,damage:f[m].damage,count:f[m].count,damagetype:f[m].damagetype,totalchance:p})}}return{sources:t,total:r}});c.getReducedDamage=function(f,e){switch(e){case"physical":if(c.enemy().totalarmorphysical()>=0){return f*(1-0.06*c.enemy().totalarmorphysical()/(1+0.06*c.enemy().totalarmorphysical()))}else{return f*(1+(1-Math.pow(0.94,-c.enemy().totalarmorphysical())))}break;case"magic":return f*(1-c.enemy().totalmagicresistance());break;case"pure":return f;break}};c.damagetotalinfo=ko.computed(function(){var n=[c.ability().getBonusDamage().sources,c.buffs.getBonusDamage().sources],w=[c.ability().getBonusDamagePercent().sources,c.buffs.getBonusDamagePercent().sources],e=c.inventory.getBonusDamage().sources,r=c.inventory.getBonusDamagePercent().sources,g=c.critinfo(),B=c.ability().getOrbSource(),m=c.inventory.getOrbSource(),q=c.orbprocinfo(),o=c.bashinfo(),u=(c.basedamage()[0]+c.basedamage()[1])/2,k=u,v=u,y=0,z={pure:0,physical:u,magic:0},p=[],f=[];for(x in e){var A=e[x].damage*e[x].count;p.push({name:e[x].displayname+(e[x].count>1?" x"+e[x].count:""),damage:A,damagetype:e[x].damagetype,damagereduced:c.getReducedDamage(A,e[x].damagetype)});k+=A;v+=A;z[e[x].damagetype]+=A}for(x in r){var A=u*r[x].damage;p.push({name:r[x].displayname,damage:A,damagetype:r[x].damagetype,damagereduced:c.getReducedDamage(A,r[x].damagetype)});k+=A;v+=A;z[r[x].damagetype]+=A}for(var x=0;x<n.length;x++){for(j in n[x]){var A=n[x][j].damage;p.push({name:n[x][j].displayname,damage:A,damagetype:n[x][j].damagetype,damagereduced:c.getReducedDamage(A,n[x][j].damagetype)});k+=A;v+=A;z[n[x][j].damagetype]+=A}}for(var x=0;x<w.length;x++){for(j in w[x]){var A=u*w[x][j].damage;p.push({name:w[x][j].displayname,damage:A,damagetype:w[x][j].damagetype,damagereduced:c.getReducedDamage(A,w[x][j].damagetype)});k+=A;v+=A;z[w[x][j].damagetype]+=A}}if(c.hero().attacktype()=="DOTA_UNIT_CAP_RANGED_ATTACK"){if(c.selectedHero().heroName=="drow_ranger"){var t=c.ability().getBonusDamagePrecisionAura().sources;var l=0}else{var t=c.buffs.getBonusDamagePrecisionAura().sources;var l=1}if(t[l]!=undefined){if(c.selectedHero().heroName=="drow_ranger"){var A=t[l].damage*c.totalagi()}else{var A=t[l].damage}p.push({name:t[l].displayname,damage:A,damagetype:"physical",damagereduced:c.getReducedDamage(A,"physical")});k+=A;v+=A;z.physical+=A}}for(var x=0;x<o.sources.length;x++){var A=o.sources[x].damage*o.sources[x].chance*o.sources[x].count;p.push({name:o.sources[x].name,damage:A,damagetype:o.sources[x].damagetype,damagereduced:c.getReducedDamage(A,o.sources[x].damagetype)});k+=A;z[o.sources[x].damagetype]+=A}for(var x=0;x<q.sources.length;x++){var A=q.sources[x].damage*(1-Math.pow(1-q.sources[x].chance,q.sources[x].count));p.push({name:q.sources[x].name,damage:A,damagetype:q.sources[x].damagetype,damagereduced:c.getReducedDamage(A,q.sources[x].damagetype)});k+=A;z[q.sources[x].damagetype]+=A}for(orb in B){var A=B[orb].damage*(1-q.total);p.push({name:B[orb].displayname,damage:A,damagetype:B[orb].damagetype,damagereduced:c.getReducedDamage(A,B[orb].damagetype)});k+=A;z[B[orb].damagetype]+=A}if(_.size(B)==0){for(orb in m){var A=m[orb].damage*(1-q.total);p.push({name:m[orb].displayname,damage:A,damagetype:m[orb].damagetype,damagereduced:c.getReducedDamage(A,m[orb].damagetype)});k+=A;z[m[orb].damagetype]+=A}}for(var x=0;x<g.sources.length;x++){var A=v*(g.sources[x].multiplier-1)*g.sources[x].totalchance;f.push({name:g.sources[x].name,damage:A,damagetype:"physical",damagereduced:c.getReducedDamage(A,"physical")});y+=A}return{sources:p,sourcescrit:f,total:k,totalcrit:y,totalcritreduced:c.getReducedDamage(y,"physical"),totalreduced:c.getReducedDamage(z.pure,"pure")+c.getReducedDamage(z.physical,"physical")+c.getReducedDamage(z.magic,"magic")}});c.getDamageTypeColor=function(e){switch(e){case"physical":return"#979aa2";break;case"pure":return"goldenrod";break;case"magic":return"#428bca";break;default:return"#979aa2";break}};c.critdamage=ko.computed(function(){c.critinfo();return 0+"%"});c.misschance=ko.computed(function(){return((1-c.enemy().ability().getMissChance()*c.debuffs.getMissChance())*100).toFixed(2)+"%"});c.totalattackrange=ko.computed(function(){return b.heroData["npc_dota_hero_"+c.selectedHero().heroName].attackrange+c.ability().getAttackRange()});c.visionrangeday=ko.computed(function(){return b.heroData["npc_dota_hero_"+c.selectedHero().heroName].visiondaytimerange*(1+c.enemy().ability().getVisionRangePctReduction()+c.debuffs.getVisionRangePctReduction())});c.visionrangenight=ko.computed(function(){return(b.heroData["npc_dota_hero_"+c.selectedHero().heroName].visionnighttimerange+c.ability().getVisionRangeNight())*(1+c.enemy().ability().getVisionRangePctReduction()+c.debuffs.getVisionRangePctReduction())});c.lifesteal=ko.computed(function(){var e=c.inventory.getLifesteal()+c.ability().getLifesteal()+c.buffs.getLifesteal();if(c.hero().attacktype()=="DOTA_UNIT_CAP_MELEE_ATTACK"){e+=c.inventory.getLifestealAura()}return e.toFixed(2)+"%"});c.damage_brackets=[[{name:"medusa_mana_shield",source:c.damagereduction,value:-0.5},{name:"templar_assassin_refraction",source:c.damagereduction,value:-1},{name:"faceless_void_backtrack",source:c.damagereduction,value:-1},{name:"nyx_assassin_spiked_carapace",source:c.damagereduction,value:-1}],[{name:"spectre_dispersion",source:c.damagereduction,value:-c.damagereduction.getAbilityDamageAmpValue("spectre_dispersion","damage_reflection_pct")},{name:"wisp_overcharge",source:c.damagereduction,value:c.damagereduction.getAbilityDamageAmpValue("wisp_overcharge","bonus_damage_pct")},{name:"slardar_sprint",source:c.damageamplification,value:0.5},{name:"bristleback_bristleback",source:c.damagereduction,value:-0.5},{name:"undying_flesh_golem",source:c.damageamplification,value:0.5}],[{name:"abaddon_borrowed_time",source:c.damagereduction,value:0.5},{name:"abaddon_aphotic_shield",source:c.damagereduction,value:c.damagereduction.getAbilityDamageAmpValue("abaddon_aphotic_shield","damage_absorb"),type:"absorb"},{name:"kunkka_ghostship",source:c.damagereduction,value:0.5},{name:"treant_living_armor",source:c.damagereduction,value:0.5}],[{name:"chen_penitence",source:c.damageamplification,value:0.5},{name:"medusa_stone_gaze",source:c.damageamplification,value:0.5},{name:"shadow_demon_soul_catcher",source:c.damageamplification,value:0.5}],[{name:"dazzle_shallow_grave",source:c.damagereduction,value:0.5}]];c.damage_brackets=[["medusa_mana_shield","templar_assassin_refraction","faceless_void_backtrack","nyx_assassin_spiked_carapace"],["spectre_dispersion","wisp_overcharge","slardar_sprint","bristleback_bristleback","undying_flesh_golem"],["abaddon_borrowed_time","abaddon_aphotic_shield","kunkka_ghostship","treant_living_armor"],["chen_penitence","medusa_stone_gaze","shadow_demon_soul_catcher"],["dazzle_shallow_grave"]];c.getDamageAfterBracket=function(e,f){var k=c.damage_brackets[f];var l=1;for(var g=0;g<k.length;g++){if(_.findWhere(c.damageamplification.buffs,{name:k[g].name})!=undefined||_.findWhere(c.damagereduction.buffs,{name:k[g].name})!=undefined){l+=k[g].value;console.log(k[g].value)}}return e*l};c.getDamageAmpReduc=function(g,q){var m=g;var e=c.damageamplification.getDamageMultiplierSources();$.extend(e,c.damagereduction.getDamageMultiplierSources());console.log("sources");console.log(e);var r=[];if(!q){r.push({label:"Initial Damage",damagetype:"physical",value:m})}var p=1;var n="";for(var k=0;k<c.damage_brackets[1].length;k++){if(e[c.damage_brackets[1][k]]!=undefined){p+=e[c.damage_brackets[1][k]].multiplier;n+=e[c.damage_brackets[1][k]].displayname+", "}m*=p;if(n!=""){r.push({label:"After "+n.substring(0,n.length-2)+" Reductions",damagetype:e[c.damage_brackets[1][k]].damagetype,value:m})}}var p=1;var n="";for(var k=0;k<c.damage_brackets[1].length;k++){if(e[c.damage_brackets[1][k]]!=undefined){p+=e[c.damage_brackets[1][k]].multiplier;n+=e[c.damage_brackets[1][k]].displayname+", "}m*=p;if(n!=""){r.push({label:"After "+n.substring(0,n.length-2)+" Reductions",damagetype:e[c.damage_brackets[1][k]].damagetype,value:m})}}var p=0;var n="";if(e.abaddon_aphotic_shield!=undefined){p+=e.abaddon_aphotic_shield.multiplier;console.log("abaddon_aphotic_shield");console.log(p);n+=e.abaddon_aphotic_shield.displayname+", "}m-=p;if(n!=""){r.push({label:"After "+n.substring(0,n.length-2)+" Reductions",damagetype:e.abaddon_aphotic_shield.damagetype,value:m})}var o=0;var l=0;if(!q){o=m;var p=0;var n="";if(e.shadow_demon_soul_catcher!=undefined){p+=e.shadow_demon_soul_catcher.multiplier;console.log("shadow_demon_soul_catcher");console.log(p)}o*=p;var f=c.getDamageAmpReduc(o,true);if(e.shadow_demon_soul_catcher!=undefined){r.push({label:e.shadow_demon_soul_catcher.displayname,damagetype:e.shadow_demon_soul_catcher.damagetype,value:o})}o=f.value;l+=f.value;if(e.shadow_demon_soul_catcher!=undefined){for(var k=0;k<f.sources.length;k++){r.push(f.sources[k])}}o=m;var p=0;var n="";if(e.chen_penitence!=undefined){p+=e.chen_penitence.multiplier;console.log("chen_penitence");console.log(p)}o*=p;var f=c.getDamageAmpReduc(o,true);if(e.chen_penitence!=undefined){r.push({label:e.chen_penitence.displayname,damagetype:e.chen_penitence.damagetype,value:o})}o=f.value;l+=f.value;if(e.chen_penitence!=undefined){for(var k=0;k<f.sources.length;k++){r.push(f.sources[k])}}}console.log("damage");console.log(m);console.log(o);if(!q){r.push({label:"Total Damage",damagetype:"physical",value:m+l})}return{value:m+l,sources:r}};c.damageInputModified=ko.computed(function(){return c.getDamageAmpReduc(c.damageInputValue(),false)})};return b}(HEROCALCULATOR);var HEROCALCULATOR=function(a){a.UnitOption=function(b,c,d,e,f){this.heroName=ko.computed(function(){return d>0?b+(f()<=d?f():1):b});this.heroDisplayName=c;this.image=e;this.levels=d};a.UnitViewModel=function(c,d){var b=new a.HeroCalculatorModel(0);b.parent=d;b.selectedUnitLevel=ko.observable(1);b.availableUnits=ko.observableArray([new a.UnitOption("npc_dota_lone_druid_bear","Lone Druid Spirit Bear",4,"/media/images/units/spirit_bear.png",b.selectedUnitLevel),new a.UnitOption("npc_dota_brewmaster_earth_","Brewmaster Earth Warrior",3,"/media/images/units/npc_dota_brewmaster_earth.png",b.selectedUnitLevel),new a.UnitOption("npc_dota_brewmaster_fire_","Brewmaster Fire Warrior",3,"/media/images/units/npc_dota_brewmaster_fire.png",b.selectedUnitLevel),new a.UnitOption("npc_dota_brewmaster_storm_","Brewmaster Storm Warrior",3,"/media/images/units/npc_dota_brewmaster_storm.png",b.selectedUnitLevel),new a.UnitOption("npc_dota_necronomicon_archer_","Necronomicon Archer",3,"/media/images/units/npc_dota_necronomicon_archer.png",b.selectedUnitLevel),new a.UnitOption("npc_dota_necronomicon_warrior_","Necronomicon Warrior",3,"/media/images/units/npc_dota_necronomicon_warrior.png",b.selectedUnitLevel),new a.UnitOption("npc_dota_lycan_wolf","Lycan Wolf",4,"/media/images/units/npc_dota_lycan_wolf.png",b.selectedUnitLevel)]);b.selectedUnit=ko.observable(b.availableUnits()[c]);b.selectedUnit.subscribe(function(e){if(e.heroName().indexOf("npc_dota_lone_druid_bear")!=-1){b.inventory.hasInventory(true);b.inventory.items.removeAll();b.inventory.activeItems.removeAll()}else{b.inventory.hasInventory(false);b.inventory.items.removeAll();b.inventory.activeItems.removeAll()}});b.hero=ko.computed(function(){return ko.mapping.fromJS(a.unitData[b.selectedUnit().heroName()])});b.getAbilityLevelMax=function(e){if(e.abilitytype()=="DOTA_ABILITY_TYPE_ATTRIBUTES"){return 10}else{if(e.name()=="necronomicon_archer_mana_burn"||e.name()=="necronomicon_archer_aoe"||e.name()=="necronomicon_warrior_mana_burn"||e.name()=="necronomicon_warrior_last_will"){return 3}else{if(e.name()=="necronomicon_warrior_sight"){return 1}else{return 4}}}};b.ability=ko.computed(function(){var e=new a.AbilityModel(ko.mapping.fromJS(a.unitData[b.selectedUnit().heroName()].abilities));e.hasScepter=b.inventory.hasScepter;switch(b.selectedUnit().heroName()){case"npc_dota_necronomicon_archer_1":case"npc_dota_necronomicon_warrior_1":e.abilities()[0].level(1);e.abilities()[1].level(1);break;case"npc_dota_necronomicon_archer_2":case"npc_dota_necronomicon_warrior_2":e.abilities()[0].level(2);e.abilities()[1].level(2);break;case"npc_dota_necronomicon_archer_3":e.abilities()[0].level(3);e.abilities()[1].level(3);break;case"npc_dota_necronomicon_warrior_3":e.abilities()[0].level(3);e.abilities()[1].level(3);e.abilities()[2].level(1);break}e.levelUpAbility=function(f,l,k,g){switch(e.abilities()[f()].name()){case"necronomicon_archer_mana_burn":case"necronomicon_archer_aoe":case"necronomicon_warrior_mana_burn":case"necronomicon_warrior_last_will":case"necronomicon_warrior_sight":break;default:if(e.abilities()[f()].level()<g.getAbilityLevelMax(l)){e.abilities()[f()].level(e.abilities()[f()].level()+1)}break}};e.levelDownAbility=function(f,l,k,g){switch(e.abilities()[f()].name()){case"necronomicon_archer_mana_burn":case"necronomicon_archer_aoe":case"necronomicon_warrior_mana_burn":case"necronomicon_warrior_last_will":case"necronomicon_warrior_sight":break;default:if(e.abilities()[f()].level()>0){e.abilities()[f()].level(e.abilities()[f()].level()-1)}break}};return e});b.primaryattribute=ko.computed(function(){var e=0;if(e=="DOTA_ATTRIBUTE_AGILITY"){return"agi"}else{if(e=="DOTA_ATTRIBUTE_INTELLECT"){return"int"}else{if(e=="DOTA_ATTRIBUTE_STRENGTH"){return"str"}else{return""}}}});b.totalAttribute=function(e){if(e=="agi"){return parseFloat(b.totalagi())}if(e=="int"){return parseFloat(b.totalint())}if(e=="str"){return parseFloat(b.totalstr())}return 0};b.totalagi=ko.computed(function(){return(a.unitData[b.selectedUnit().heroName()].attributebaseagility+a.unitData[b.selectedUnit().heroName()].attributeagilitygain*(b.selectedHeroLevel()-1)+b.ability().getAttributeBonusLevel()*2+b.ability().getAgility()+b.enemy().ability().getAllStatsReduction()+b.debuffs.getAllStatsReduction()).toFixed(2)});b.totalint=ko.computed(function(){return(a.unitData[b.selectedUnit().heroName()].attributebaseintelligence+a.unitData[b.selectedUnit().heroName()].attributeintelligencegain*(b.selectedHeroLevel()-1)+b.ability().getAttributeBonusLevel()*2+b.ability().getIntelligence()+b.enemy().ability().getAllStatsReduction()+b.debuffs.getAllStatsReduction()).toFixed(2)});b.totalstr=ko.computed(function(){return(a.unitData[b.selectedUnit().heroName()].attributebasestrength+a.unitData[b.selectedUnit().heroName()].attributestrengthgain*(b.selectedHeroLevel()-1)+b.ability().getAttributeBonusLevel()*2+b.ability().getStrength()+b.enemy().ability().getAllStatsReduction()+b.debuffs.getAllStatsReduction()).toFixed(2)});b.health=ko.computed(function(){return(a.unitData[b.selectedUnit().heroName()].statushealth+b.totalstr()*19+b.inventory.getHealth()+b.ability().getHealth()).toFixed(2)});b.healthregen=ko.computed(function(){return(a.unitData[b.selectedUnit().heroName()].statushealthregen+b.totalstr()*0.03+b.inventory.getHealthRegen()+b.ability().getHealthRegen()+b.buffs.getHealthRegen()).toFixed(2)});b.mana=ko.computed(function(){return(a.unitData[b.selectedUnit().heroName()].statusmana+b.totalint()*13+b.inventory.getMana()).toFixed(2)});b.manaregen=ko.computed(function(){return((a.unitData[b.selectedUnit().heroName()].statusmanaregen+b.totalint()*0.04+b.ability().getManaRegen())*(1+b.inventory.getManaRegenPercent())+(b.selectedHero().heroName=="crystal_maiden"?b.ability().getManaRegenArcaneAura()*2:b.buffs.getManaRegenArcaneAura())+b.inventory.getManaRegenBloodstone()-b.enemy().ability().getManaRegenReduction()).toFixed(2)});b.totalarmorphysical=ko.computed(function(){return(b.enemy().ability().getArmorBaseReduction()*b.debuffs.getArmorBaseReduction()*(a.unitData[b.selectedUnit().heroName()].armorphysical+b.totalagi()*0.14)+b.inventory.getArmor()+b.ability().getArmor()+b.enemy().ability().getArmorReduction()+b.buffs.getArmor()+b.debuffs.getArmorReduction()).toFixed(2)});b.totalarmorphysicalreduction=ko.observable();b.damagreduction=ko.observable();b.totalmovementspeed=ko.computed(function(){var e=b.ability().setMovementSpeed()>0?b.ability().setMovementSpeed():b.buffs.setMovementSpeed();if(e>0){return e}else{return((a.unitData[b.selectedUnit().heroName()].movementspeed+b.inventory.getMovementSpeedFlat()+b.ability().getMovementSpeedFlat())*(1+b.inventory.getMovementSpeedPercent()+b.ability().getMovementSpeedPercent()+b.enemy().inventory.getMovementSpeedPercentReduction()+b.enemy().ability().getMovementSpeedPercentReduction()+b.buffs.getMovementSpeedPercent()+b.debuffs.getMovementSpeedPercentReduction())).toFixed(2)}});b.totalturnrate=ko.computed(function(){return(a.unitData[b.selectedUnit().heroName()].movementturnrate*(1+b.enemy().ability().getTurnRateReduction()+b.debuffs.getTurnRateReduction())).toFixed(2)});b.basedamage=ko.computed(function(){return[Math.floor(a.unitData[b.selectedUnit().heroName()].attackdamagemin+b.totalAttribute(b.primaryattribute())+b.ability().getBaseDamage()),Math.floor(a.unitData[b.selectedUnit().heroName()].attackdamagemax+b.totalAttribute(b.primaryattribute())+b.ability().getBaseDamage())]});b.bonusdamage=ko.computed(function(){return b.inventory.getBonusDamage().total+b.ability().getBonusDamage().total+b.buffs.getBonusDamage().total+Math.floor((b.basedamage()[0]+b.basedamage()[1])/2*(b.inventory.getBonusDamagePercent().total+b.ability().getBonusDamagePercent().total+b.buffs.getBonusDamagePercent().total))+Math.floor(b.hero().attacktype()=="DOTA_UNIT_CAP_RANGED_ATTACK"?b.selectedHero().heroName=="drow_ranger"?b.ability().getBonusDamagePrecisionAura().total[0]*b.totalagi():b.buffs.getBonusDamagePrecisionAura().total[1]:0)});b.bonusdamagereduction=ko.computed(function(){return Math.abs(b.enemy().ability().getBonusDamageReduction()+b.debuffs.getBonusDamageReduction())});b.damage=ko.computed(function(){return[b.basedamage()[0]+b.bonusdamage()[0],b.basedamage()[1]+b.bonusdamage()[1]]});b.damageagainstenemy=ko.observable();b.totalmagicresistanceproduct=ko.computed(function(){return(1-a.unitData[b.selectedUnit().heroName()].magicalresistance/100)*(1-b.inventory.getMagicResist()/100)*(1-b.ability().getMagicResist()/100)*(1-b.buffs.getMagicResist()/100)*b.enemy().inventory.getMagicResistReduction()*b.enemy().ability().getMagicResistReduction()*b.debuffs.getMagicResistReduction()});b.totalmagicresistance=ko.computed(function(){return 1-b.totalmagicresistanceproduct()});b.bat=ko.computed(function(){var e=b.ability().getBAT();if(e>0){return e}return a.unitData[b.selectedUnit().heroName()].attackrate});b.ias=ko.computed(function(){var e=parseFloat(b.totalagi())+b.inventory.getAttackSpeed()+b.ability().getAttackSpeed()+b.enemy().ability().getAttackSpeedReduction()+b.buffs.getAttackSpeed()+b.debuffs.getAttackSpeedReduction();if(e<-80){return -80}else{if(e>400){return 400}}return e.toFixed(2)});b.attacktime=ko.computed(function(){return(b.bat()/(1+b.ias()/100)).toFixed(2)});b.attackspersecond=ko.computed(function(){return(1+b.ias()/100)/b.bat()});b.evasion=ko.computed(function(){var f=b.ability().setEvasion();if(f){return(f*100).toFixed(2)+"%"}else{return((1-b.inventory.getEvasion()*b.ability().getEvasion())*100).toFixed(2)+"%"}});b.ehp_physical=ko.computed(function(){return(b.health()*(1+0.06*b.totalarmorphysical())/(1-(1-b.inventory.getEvasion()*b.ability().getEvasion()))).toFixed(2)});b.ehp_magical=ko.computed(function(){return(b.health()/b.totalmagicresistanceproduct()).toFixed(2)});return b};return a}(HEROCALCULATOR);